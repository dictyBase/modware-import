/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the InstanceId type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstanceId{}

// InstanceId struct for InstanceId
type InstanceId struct {
	InstanceId string `json:"instance_id"`
}

// NewInstanceId instantiates a new InstanceId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceId(instanceId string) *InstanceId {
	this := InstanceId{}
	this.InstanceId = instanceId
	return &this
}

// NewInstanceIdWithDefaults instantiates a new InstanceId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceIdWithDefaults() *InstanceId {
	this := InstanceId{}
	return &this
}

// GetInstanceId returns the InstanceId field value
func (o *InstanceId) GetInstanceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value
// and a boolean to check if the value has been set.
func (o *InstanceId) GetInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceId, true
}

// SetInstanceId sets field value
func (o *InstanceId) SetInstanceId(v string) {
	o.InstanceId = v
}

func (o InstanceId) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InstanceId) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: instance_id is readOnly
	return toSerialize, nil
}

type NullableInstanceId struct {
	value *InstanceId
	isSet bool
}

func (v NullableInstanceId) Get() *InstanceId {
	return v.value
}

func (v *NullableInstanceId) Set(val *InstanceId) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceId) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceId(val *InstanceId) *NullableInstanceId {
	return &NullableInstanceId{value: val, isSet: true}
}

func (v NullableInstanceId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


