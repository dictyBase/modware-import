/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the UndoRedoResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UndoRedoResponse{}

// UndoRedoResponse struct for UndoRedoResponse
type UndoRedoResponse struct {
	Actions []UndoRedoAction `json:"actions"`
	// Indicates the result of the undo/redo operation. Will be 'SUCCESS' on success, 'NOTHING_TO_DO' when there is no action to undo/redo and 'SKIPPED_DUE_TO_ERROR' when the undo/redo failed due to a conflict or error and was skipped over.
	ResultCode string `json:"result_code"`
}

// NewUndoRedoResponse instantiates a new UndoRedoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUndoRedoResponse(actions []UndoRedoAction, resultCode string) *UndoRedoResponse {
	this := UndoRedoResponse{}
	this.Actions = actions
	this.ResultCode = resultCode
	return &this
}

// NewUndoRedoResponseWithDefaults instantiates a new UndoRedoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUndoRedoResponseWithDefaults() *UndoRedoResponse {
	this := UndoRedoResponse{}
	return &this
}

// GetActions returns the Actions field value
func (o *UndoRedoResponse) GetActions() []UndoRedoAction {
	if o == nil {
		var ret []UndoRedoAction
		return ret
	}

	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value
// and a boolean to check if the value has been set.
func (o *UndoRedoResponse) GetActionsOk() ([]UndoRedoAction, bool) {
	if o == nil {
		return nil, false
	}
	return o.Actions, true
}

// SetActions sets field value
func (o *UndoRedoResponse) SetActions(v []UndoRedoAction) {
	o.Actions = v
}

// GetResultCode returns the ResultCode field value
func (o *UndoRedoResponse) GetResultCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResultCode
}

// GetResultCodeOk returns a tuple with the ResultCode field value
// and a boolean to check if the value has been set.
func (o *UndoRedoResponse) GetResultCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResultCode, true
}

// SetResultCode sets field value
func (o *UndoRedoResponse) SetResultCode(v string) {
	o.ResultCode = v
}

func (o UndoRedoResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UndoRedoResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["actions"] = o.Actions
	toSerialize["result_code"] = o.ResultCode
	return toSerialize, nil
}

type NullableUndoRedoResponse struct {
	value *UndoRedoResponse
	isSet bool
}

func (v NullableUndoRedoResponse) Get() *UndoRedoResponse {
	return v.value
}

func (v *NullableUndoRedoResponse) Set(val *UndoRedoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUndoRedoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUndoRedoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUndoRedoResponse(val *UndoRedoResponse) *NullableUndoRedoResponse {
	return &NullableUndoRedoResponse{value: val, isSet: true}
}

func (v NullableUndoRedoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUndoRedoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


