/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the WorkspaceUserWorkspace type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkspaceUserWorkspace{}

// WorkspaceUserWorkspace This serializers includes relevant fields of the Workspace model, but also some WorkspaceUser specific fields related to the workspace user relation.  Additionally, the list of users are included for each workspace.
type WorkspaceUserWorkspace struct {
	// Workspace id.
	Id int32 `json:"id"`
	// Workspace name.
	Name string `json:"name"`
	// List of all workspace users.
	Users []WorkspaceUser `json:"users"`
	// The requesting user's order within the workspace users.
	Order int32 `json:"order"`
	// The requesting user's permissions for the workspace.
	Permissions string `json:"permissions"`
}

// NewWorkspaceUserWorkspace instantiates a new WorkspaceUserWorkspace object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkspaceUserWorkspace(id int32, name string, users []WorkspaceUser, order int32, permissions string) *WorkspaceUserWorkspace {
	this := WorkspaceUserWorkspace{}
	this.Id = id
	this.Name = name
	this.Users = users
	this.Order = order
	this.Permissions = permissions
	return &this
}

// NewWorkspaceUserWorkspaceWithDefaults instantiates a new WorkspaceUserWorkspace object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkspaceUserWorkspaceWithDefaults() *WorkspaceUserWorkspace {
	this := WorkspaceUserWorkspace{}
	return &this
}

// GetId returns the Id field value
func (o *WorkspaceUserWorkspace) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WorkspaceUserWorkspace) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WorkspaceUserWorkspace) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *WorkspaceUserWorkspace) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WorkspaceUserWorkspace) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WorkspaceUserWorkspace) SetName(v string) {
	o.Name = v
}

// GetUsers returns the Users field value
func (o *WorkspaceUserWorkspace) GetUsers() []WorkspaceUser {
	if o == nil {
		var ret []WorkspaceUser
		return ret
	}

	return o.Users
}

// GetUsersOk returns a tuple with the Users field value
// and a boolean to check if the value has been set.
func (o *WorkspaceUserWorkspace) GetUsersOk() ([]WorkspaceUser, bool) {
	if o == nil {
		return nil, false
	}
	return o.Users, true
}

// SetUsers sets field value
func (o *WorkspaceUserWorkspace) SetUsers(v []WorkspaceUser) {
	o.Users = v
}

// GetOrder returns the Order field value
func (o *WorkspaceUserWorkspace) GetOrder() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Order
}

// GetOrderOk returns a tuple with the Order field value
// and a boolean to check if the value has been set.
func (o *WorkspaceUserWorkspace) GetOrderOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Order, true
}

// SetOrder sets field value
func (o *WorkspaceUserWorkspace) SetOrder(v int32) {
	o.Order = v
}

// GetPermissions returns the Permissions field value
func (o *WorkspaceUserWorkspace) GetPermissions() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *WorkspaceUserWorkspace) GetPermissionsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Permissions, true
}

// SetPermissions sets field value
func (o *WorkspaceUserWorkspace) SetPermissions(v string) {
	o.Permissions = v
}

func (o WorkspaceUserWorkspace) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkspaceUserWorkspace) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: id is readOnly
	// skip: name is readOnly
	// skip: users is readOnly
	// skip: order is readOnly
	// skip: permissions is readOnly
	return toSerialize, nil
}

type NullableWorkspaceUserWorkspace struct {
	value *WorkspaceUserWorkspace
	isSet bool
}

func (v NullableWorkspaceUserWorkspace) Get() *WorkspaceUserWorkspace {
	return v.value
}

func (v *NullableWorkspaceUserWorkspace) Set(val *WorkspaceUserWorkspace) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkspaceUserWorkspace) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkspaceUserWorkspace) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkspaceUserWorkspace(val *WorkspaceUserWorkspace) *NullableWorkspaceUserWorkspace {
	return &NullableWorkspaceUserWorkspace{value: val, isSet: true}
}

func (v NullableWorkspaceUserWorkspace) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkspaceUserWorkspace) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


