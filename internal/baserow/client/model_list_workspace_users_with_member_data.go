/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// checks if the ListWorkspaceUsersWithMemberData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListWorkspaceUsersWithMemberData{}

// ListWorkspaceUsersWithMemberData Mixin to a DRF serializer class to raise an exception if data with unknown fields is provided to the serializer.
type ListWorkspaceUsersWithMemberData struct {
	Id int32 `json:"id"`
	// User defined name.
	Name string `json:"name"`
	// User email.
	Email string `json:"email"`
	// DEPRECATED: Please use the functionally identical `workspace` instead as this field is being removed in the future.
	Group int32 `json:"group"`
	// The workspace that the user has access to.
	Workspace int32 `json:"workspace"`
	// The permissions that the user has within the workspace.
	Permissions *string `json:"permissions,omitempty"`
	CreatedOn time.Time `json:"created_on"`
	// The user that has access to the workspace.
	UserId int32 `json:"user_id"`
	// True if user account is pending deletion.
	ToBeDeleted bool `json:"to_be_deleted"`
	// Enterprise only: a list of team IDs and names, which this workspace user belongs to in this workspace.
	Teams []WorkspaceUserEnterpriseTeam `json:"teams,omitempty"`
	// Enterprise or advanced only: the uid of the role that is assigned to this workspace user in this workspace.
	RoleUid NullableString `json:"role_uid,omitempty"`
	// Enterprise or advanced only: the highest role uid assigned to this user in this workspace on anything, including roles from teams.
	HighestRoleUid NullableString `json:"highest_role_uid,omitempty"`
}

// NewListWorkspaceUsersWithMemberData instantiates a new ListWorkspaceUsersWithMemberData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListWorkspaceUsersWithMemberData(id int32, name string, email string, group int32, workspace int32, createdOn time.Time, userId int32, toBeDeleted bool) *ListWorkspaceUsersWithMemberData {
	this := ListWorkspaceUsersWithMemberData{}
	this.Id = id
	this.Name = name
	this.Email = email
	this.Group = group
	this.Workspace = workspace
	this.CreatedOn = createdOn
	this.UserId = userId
	this.ToBeDeleted = toBeDeleted
	return &this
}

// NewListWorkspaceUsersWithMemberDataWithDefaults instantiates a new ListWorkspaceUsersWithMemberData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListWorkspaceUsersWithMemberDataWithDefaults() *ListWorkspaceUsersWithMemberData {
	this := ListWorkspaceUsersWithMemberData{}
	return &this
}

// GetId returns the Id field value
func (o *ListWorkspaceUsersWithMemberData) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ListWorkspaceUsersWithMemberData) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ListWorkspaceUsersWithMemberData) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *ListWorkspaceUsersWithMemberData) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ListWorkspaceUsersWithMemberData) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ListWorkspaceUsersWithMemberData) SetName(v string) {
	o.Name = v
}

// GetEmail returns the Email field value
func (o *ListWorkspaceUsersWithMemberData) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *ListWorkspaceUsersWithMemberData) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *ListWorkspaceUsersWithMemberData) SetEmail(v string) {
	o.Email = v
}

// GetGroup returns the Group field value
func (o *ListWorkspaceUsersWithMemberData) GetGroup() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Group
}

// GetGroupOk returns a tuple with the Group field value
// and a boolean to check if the value has been set.
func (o *ListWorkspaceUsersWithMemberData) GetGroupOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Group, true
}

// SetGroup sets field value
func (o *ListWorkspaceUsersWithMemberData) SetGroup(v int32) {
	o.Group = v
}

// GetWorkspace returns the Workspace field value
func (o *ListWorkspaceUsersWithMemberData) GetWorkspace() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Workspace
}

// GetWorkspaceOk returns a tuple with the Workspace field value
// and a boolean to check if the value has been set.
func (o *ListWorkspaceUsersWithMemberData) GetWorkspaceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Workspace, true
}

// SetWorkspace sets field value
func (o *ListWorkspaceUsersWithMemberData) SetWorkspace(v int32) {
	o.Workspace = v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *ListWorkspaceUsersWithMemberData) GetPermissions() string {
	if o == nil || IsNil(o.Permissions) {
		var ret string
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorkspaceUsersWithMemberData) GetPermissionsOk() (*string, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *ListWorkspaceUsersWithMemberData) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given string and assigns it to the Permissions field.
func (o *ListWorkspaceUsersWithMemberData) SetPermissions(v string) {
	o.Permissions = &v
}

// GetCreatedOn returns the CreatedOn field value
func (o *ListWorkspaceUsersWithMemberData) GetCreatedOn() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value
// and a boolean to check if the value has been set.
func (o *ListWorkspaceUsersWithMemberData) GetCreatedOnOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedOn, true
}

// SetCreatedOn sets field value
func (o *ListWorkspaceUsersWithMemberData) SetCreatedOn(v time.Time) {
	o.CreatedOn = v
}

// GetUserId returns the UserId field value
func (o *ListWorkspaceUsersWithMemberData) GetUserId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *ListWorkspaceUsersWithMemberData) GetUserIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *ListWorkspaceUsersWithMemberData) SetUserId(v int32) {
	o.UserId = v
}

// GetToBeDeleted returns the ToBeDeleted field value
func (o *ListWorkspaceUsersWithMemberData) GetToBeDeleted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ToBeDeleted
}

// GetToBeDeletedOk returns a tuple with the ToBeDeleted field value
// and a boolean to check if the value has been set.
func (o *ListWorkspaceUsersWithMemberData) GetToBeDeletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ToBeDeleted, true
}

// SetToBeDeleted sets field value
func (o *ListWorkspaceUsersWithMemberData) SetToBeDeleted(v bool) {
	o.ToBeDeleted = v
}

// GetTeams returns the Teams field value if set, zero value otherwise.
func (o *ListWorkspaceUsersWithMemberData) GetTeams() []WorkspaceUserEnterpriseTeam {
	if o == nil || IsNil(o.Teams) {
		var ret []WorkspaceUserEnterpriseTeam
		return ret
	}
	return o.Teams
}

// GetTeamsOk returns a tuple with the Teams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorkspaceUsersWithMemberData) GetTeamsOk() ([]WorkspaceUserEnterpriseTeam, bool) {
	if o == nil || IsNil(o.Teams) {
		return nil, false
	}
	return o.Teams, true
}

// HasTeams returns a boolean if a field has been set.
func (o *ListWorkspaceUsersWithMemberData) HasTeams() bool {
	if o != nil && !IsNil(o.Teams) {
		return true
	}

	return false
}

// SetTeams gets a reference to the given []WorkspaceUserEnterpriseTeam and assigns it to the Teams field.
func (o *ListWorkspaceUsersWithMemberData) SetTeams(v []WorkspaceUserEnterpriseTeam) {
	o.Teams = v
}

// GetRoleUid returns the RoleUid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListWorkspaceUsersWithMemberData) GetRoleUid() string {
	if o == nil || IsNil(o.RoleUid.Get()) {
		var ret string
		return ret
	}
	return *o.RoleUid.Get()
}

// GetRoleUidOk returns a tuple with the RoleUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListWorkspaceUsersWithMemberData) GetRoleUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RoleUid.Get(), o.RoleUid.IsSet()
}

// HasRoleUid returns a boolean if a field has been set.
func (o *ListWorkspaceUsersWithMemberData) HasRoleUid() bool {
	if o != nil && o.RoleUid.IsSet() {
		return true
	}

	return false
}

// SetRoleUid gets a reference to the given NullableString and assigns it to the RoleUid field.
func (o *ListWorkspaceUsersWithMemberData) SetRoleUid(v string) {
	o.RoleUid.Set(&v)
}
// SetRoleUidNil sets the value for RoleUid to be an explicit nil
func (o *ListWorkspaceUsersWithMemberData) SetRoleUidNil() {
	o.RoleUid.Set(nil)
}

// UnsetRoleUid ensures that no value is present for RoleUid, not even an explicit nil
func (o *ListWorkspaceUsersWithMemberData) UnsetRoleUid() {
	o.RoleUid.Unset()
}

// GetHighestRoleUid returns the HighestRoleUid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListWorkspaceUsersWithMemberData) GetHighestRoleUid() string {
	if o == nil || IsNil(o.HighestRoleUid.Get()) {
		var ret string
		return ret
	}
	return *o.HighestRoleUid.Get()
}

// GetHighestRoleUidOk returns a tuple with the HighestRoleUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListWorkspaceUsersWithMemberData) GetHighestRoleUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HighestRoleUid.Get(), o.HighestRoleUid.IsSet()
}

// HasHighestRoleUid returns a boolean if a field has been set.
func (o *ListWorkspaceUsersWithMemberData) HasHighestRoleUid() bool {
	if o != nil && o.HighestRoleUid.IsSet() {
		return true
	}

	return false
}

// SetHighestRoleUid gets a reference to the given NullableString and assigns it to the HighestRoleUid field.
func (o *ListWorkspaceUsersWithMemberData) SetHighestRoleUid(v string) {
	o.HighestRoleUid.Set(&v)
}
// SetHighestRoleUidNil sets the value for HighestRoleUid to be an explicit nil
func (o *ListWorkspaceUsersWithMemberData) SetHighestRoleUidNil() {
	o.HighestRoleUid.Set(nil)
}

// UnsetHighestRoleUid ensures that no value is present for HighestRoleUid, not even an explicit nil
func (o *ListWorkspaceUsersWithMemberData) UnsetHighestRoleUid() {
	o.HighestRoleUid.Unset()
}

func (o ListWorkspaceUsersWithMemberData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListWorkspaceUsersWithMemberData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: id is readOnly
	// skip: name is readOnly
	// skip: email is readOnly
	toSerialize["group"] = o.Group
	toSerialize["workspace"] = o.Workspace
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	// skip: created_on is readOnly
	// skip: user_id is readOnly
	toSerialize["to_be_deleted"] = o.ToBeDeleted
	if !IsNil(o.Teams) {
		toSerialize["teams"] = o.Teams
	}
	if o.RoleUid.IsSet() {
		toSerialize["role_uid"] = o.RoleUid.Get()
	}
	if o.HighestRoleUid.IsSet() {
		toSerialize["highest_role_uid"] = o.HighestRoleUid.Get()
	}
	return toSerialize, nil
}

type NullableListWorkspaceUsersWithMemberData struct {
	value *ListWorkspaceUsersWithMemberData
	isSet bool
}

func (v NullableListWorkspaceUsersWithMemberData) Get() *ListWorkspaceUsersWithMemberData {
	return v.value
}

func (v *NullableListWorkspaceUsersWithMemberData) Set(val *ListWorkspaceUsersWithMemberData) {
	v.value = val
	v.isSet = true
}

func (v NullableListWorkspaceUsersWithMemberData) IsSet() bool {
	return v.isSet
}

func (v *NullableListWorkspaceUsersWithMemberData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListWorkspaceUsersWithMemberData(val *ListWorkspaceUsersWithMemberData) *NullableListWorkspaceUsersWithMemberData {
	return &NullableListWorkspaceUsersWithMemberData{value: val, isSet: true}
}

func (v NullableListWorkspaceUsersWithMemberData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListWorkspaceUsersWithMemberData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


