/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the RequestAirtableImportJobCreateJob type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestAirtableImportJobCreateJob{}

// RequestAirtableImportJobCreateJob struct for RequestAirtableImportJobCreateJob
type RequestAirtableImportJobCreateJob struct {
	Type Type4afEnum `json:"type"`
	// The group ID where the Airtable base must be imported into.
	GroupId *int32 `json:"group_id,omitempty"`
	// The workspace ID where the Airtable base must be imported into.
	WorkspaceId *int32 `json:"workspace_id,omitempty"`
	// The publicly shared URL of the Airtable base (e.g. https://airtable.com/shrxxxxxxxxxxxxxx)
	AirtableShareUrl string `json:"airtable_share_url"`
}

// NewRequestAirtableImportJobCreateJob instantiates a new RequestAirtableImportJobCreateJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestAirtableImportJobCreateJob(type_ Type4afEnum, airtableShareUrl string) *RequestAirtableImportJobCreateJob {
	this := RequestAirtableImportJobCreateJob{}
	this.Type = type_
	this.AirtableShareUrl = airtableShareUrl
	return &this
}

// NewRequestAirtableImportJobCreateJobWithDefaults instantiates a new RequestAirtableImportJobCreateJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestAirtableImportJobCreateJobWithDefaults() *RequestAirtableImportJobCreateJob {
	this := RequestAirtableImportJobCreateJob{}
	return &this
}

// GetType returns the Type field value
func (o *RequestAirtableImportJobCreateJob) GetType() Type4afEnum {
	if o == nil {
		var ret Type4afEnum
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *RequestAirtableImportJobCreateJob) GetTypeOk() (*Type4afEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *RequestAirtableImportJobCreateJob) SetType(v Type4afEnum) {
	o.Type = v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *RequestAirtableImportJobCreateJob) GetGroupId() int32 {
	if o == nil || IsNil(o.GroupId) {
		var ret int32
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestAirtableImportJobCreateJob) GetGroupIdOk() (*int32, bool) {
	if o == nil || IsNil(o.GroupId) {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *RequestAirtableImportJobCreateJob) HasGroupId() bool {
	if o != nil && !IsNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given int32 and assigns it to the GroupId field.
func (o *RequestAirtableImportJobCreateJob) SetGroupId(v int32) {
	o.GroupId = &v
}

// GetWorkspaceId returns the WorkspaceId field value if set, zero value otherwise.
func (o *RequestAirtableImportJobCreateJob) GetWorkspaceId() int32 {
	if o == nil || IsNil(o.WorkspaceId) {
		var ret int32
		return ret
	}
	return *o.WorkspaceId
}

// GetWorkspaceIdOk returns a tuple with the WorkspaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestAirtableImportJobCreateJob) GetWorkspaceIdOk() (*int32, bool) {
	if o == nil || IsNil(o.WorkspaceId) {
		return nil, false
	}
	return o.WorkspaceId, true
}

// HasWorkspaceId returns a boolean if a field has been set.
func (o *RequestAirtableImportJobCreateJob) HasWorkspaceId() bool {
	if o != nil && !IsNil(o.WorkspaceId) {
		return true
	}

	return false
}

// SetWorkspaceId gets a reference to the given int32 and assigns it to the WorkspaceId field.
func (o *RequestAirtableImportJobCreateJob) SetWorkspaceId(v int32) {
	o.WorkspaceId = &v
}

// GetAirtableShareUrl returns the AirtableShareUrl field value
func (o *RequestAirtableImportJobCreateJob) GetAirtableShareUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AirtableShareUrl
}

// GetAirtableShareUrlOk returns a tuple with the AirtableShareUrl field value
// and a boolean to check if the value has been set.
func (o *RequestAirtableImportJobCreateJob) GetAirtableShareUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AirtableShareUrl, true
}

// SetAirtableShareUrl sets field value
func (o *RequestAirtableImportJobCreateJob) SetAirtableShareUrl(v string) {
	o.AirtableShareUrl = v
}

func (o RequestAirtableImportJobCreateJob) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestAirtableImportJobCreateJob) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	if !IsNil(o.GroupId) {
		toSerialize["group_id"] = o.GroupId
	}
	if !IsNil(o.WorkspaceId) {
		toSerialize["workspace_id"] = o.WorkspaceId
	}
	toSerialize["airtable_share_url"] = o.AirtableShareUrl
	return toSerialize, nil
}

type NullableRequestAirtableImportJobCreateJob struct {
	value *RequestAirtableImportJobCreateJob
	isSet bool
}

func (v NullableRequestAirtableImportJobCreateJob) Get() *RequestAirtableImportJobCreateJob {
	return v.value
}

func (v *NullableRequestAirtableImportJobCreateJob) Set(val *RequestAirtableImportJobCreateJob) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestAirtableImportJobCreateJob) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestAirtableImportJobCreateJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestAirtableImportJobCreateJob(val *RequestAirtableImportJobCreateJob) *NullableRequestAirtableImportJobCreateJob {
	return &NullableRequestAirtableImportJobCreateJob{value: val, isSet: true}
}

func (v NullableRequestAirtableImportJobCreateJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestAirtableImportJobCreateJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


