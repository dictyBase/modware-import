/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the WorkspaceUserEnterpriseTeam type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkspaceUserEnterpriseTeam{}

// WorkspaceUserEnterpriseTeam A serializer for the `WorkspaceUserSerializer.teams` field.
type WorkspaceUserEnterpriseTeam struct {
	// The unique identifier for this team.
	Id int32 `json:"id"`
	// The team name that this group user belongs to.
	Name string `json:"name"`
}

// NewWorkspaceUserEnterpriseTeam instantiates a new WorkspaceUserEnterpriseTeam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkspaceUserEnterpriseTeam(id int32, name string) *WorkspaceUserEnterpriseTeam {
	this := WorkspaceUserEnterpriseTeam{}
	this.Id = id
	this.Name = name
	return &this
}

// NewWorkspaceUserEnterpriseTeamWithDefaults instantiates a new WorkspaceUserEnterpriseTeam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkspaceUserEnterpriseTeamWithDefaults() *WorkspaceUserEnterpriseTeam {
	this := WorkspaceUserEnterpriseTeam{}
	return &this
}

// GetId returns the Id field value
func (o *WorkspaceUserEnterpriseTeam) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WorkspaceUserEnterpriseTeam) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WorkspaceUserEnterpriseTeam) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *WorkspaceUserEnterpriseTeam) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WorkspaceUserEnterpriseTeam) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WorkspaceUserEnterpriseTeam) SetName(v string) {
	o.Name = v
}

func (o WorkspaceUserEnterpriseTeam) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkspaceUserEnterpriseTeam) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: id is readOnly
	// skip: name is readOnly
	return toSerialize, nil
}

type NullableWorkspaceUserEnterpriseTeam struct {
	value *WorkspaceUserEnterpriseTeam
	isSet bool
}

func (v NullableWorkspaceUserEnterpriseTeam) Get() *WorkspaceUserEnterpriseTeam {
	return v.value
}

func (v *NullableWorkspaceUserEnterpriseTeam) Set(val *WorkspaceUserEnterpriseTeam) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkspaceUserEnterpriseTeam) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkspaceUserEnterpriseTeam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkspaceUserEnterpriseTeam(val *WorkspaceUserEnterpriseTeam) *NullableWorkspaceUserEnterpriseTeam {
	return &NullableWorkspaceUserEnterpriseTeam{value: val, isSet: true}
}

func (v NullableWorkspaceUserEnterpriseTeam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkspaceUserEnterpriseTeam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


