/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// checks if the FileFieldResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FileFieldResponse{}

// FileFieldResponse struct for FileFieldResponse
type FileFieldResponse struct {
	Url string `json:"url"`
	Thumbnails map[string]interface{} `json:"thumbnails"`
	VisibleName string `json:"visible_name"`
	Name string `json:"name"`
	Size int32 `json:"size"`
	MimeType string `json:"mime_type"`
	IsImage bool `json:"is_image"`
	ImageWidth int32 `json:"image_width"`
	ImageHeight int32 `json:"image_height"`
	UploadedAt time.Time `json:"uploaded_at"`
}

// NewFileFieldResponse instantiates a new FileFieldResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileFieldResponse(url string, thumbnails map[string]interface{}, visibleName string, name string, size int32, mimeType string, isImage bool, imageWidth int32, imageHeight int32, uploadedAt time.Time) *FileFieldResponse {
	this := FileFieldResponse{}
	this.Url = url
	this.Thumbnails = thumbnails
	this.VisibleName = visibleName
	this.Name = name
	this.Size = size
	this.MimeType = mimeType
	this.IsImage = isImage
	this.ImageWidth = imageWidth
	this.ImageHeight = imageHeight
	this.UploadedAt = uploadedAt
	return &this
}

// NewFileFieldResponseWithDefaults instantiates a new FileFieldResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileFieldResponseWithDefaults() *FileFieldResponse {
	this := FileFieldResponse{}
	return &this
}

// GetUrl returns the Url field value
func (o *FileFieldResponse) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *FileFieldResponse) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *FileFieldResponse) SetUrl(v string) {
	o.Url = v
}

// GetThumbnails returns the Thumbnails field value
func (o *FileFieldResponse) GetThumbnails() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Thumbnails
}

// GetThumbnailsOk returns a tuple with the Thumbnails field value
// and a boolean to check if the value has been set.
func (o *FileFieldResponse) GetThumbnailsOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Thumbnails, true
}

// SetThumbnails sets field value
func (o *FileFieldResponse) SetThumbnails(v map[string]interface{}) {
	o.Thumbnails = v
}

// GetVisibleName returns the VisibleName field value
func (o *FileFieldResponse) GetVisibleName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VisibleName
}

// GetVisibleNameOk returns a tuple with the VisibleName field value
// and a boolean to check if the value has been set.
func (o *FileFieldResponse) GetVisibleNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VisibleName, true
}

// SetVisibleName sets field value
func (o *FileFieldResponse) SetVisibleName(v string) {
	o.VisibleName = v
}

// GetName returns the Name field value
func (o *FileFieldResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *FileFieldResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *FileFieldResponse) SetName(v string) {
	o.Name = v
}

// GetSize returns the Size field value
func (o *FileFieldResponse) GetSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *FileFieldResponse) GetSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *FileFieldResponse) SetSize(v int32) {
	o.Size = v
}

// GetMimeType returns the MimeType field value
func (o *FileFieldResponse) GetMimeType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MimeType
}

// GetMimeTypeOk returns a tuple with the MimeType field value
// and a boolean to check if the value has been set.
func (o *FileFieldResponse) GetMimeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MimeType, true
}

// SetMimeType sets field value
func (o *FileFieldResponse) SetMimeType(v string) {
	o.MimeType = v
}

// GetIsImage returns the IsImage field value
func (o *FileFieldResponse) GetIsImage() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsImage
}

// GetIsImageOk returns a tuple with the IsImage field value
// and a boolean to check if the value has been set.
func (o *FileFieldResponse) GetIsImageOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsImage, true
}

// SetIsImage sets field value
func (o *FileFieldResponse) SetIsImage(v bool) {
	o.IsImage = v
}

// GetImageWidth returns the ImageWidth field value
func (o *FileFieldResponse) GetImageWidth() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ImageWidth
}

// GetImageWidthOk returns a tuple with the ImageWidth field value
// and a boolean to check if the value has been set.
func (o *FileFieldResponse) GetImageWidthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageWidth, true
}

// SetImageWidth sets field value
func (o *FileFieldResponse) SetImageWidth(v int32) {
	o.ImageWidth = v
}

// GetImageHeight returns the ImageHeight field value
func (o *FileFieldResponse) GetImageHeight() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ImageHeight
}

// GetImageHeightOk returns a tuple with the ImageHeight field value
// and a boolean to check if the value has been set.
func (o *FileFieldResponse) GetImageHeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageHeight, true
}

// SetImageHeight sets field value
func (o *FileFieldResponse) SetImageHeight(v int32) {
	o.ImageHeight = v
}

// GetUploadedAt returns the UploadedAt field value
func (o *FileFieldResponse) GetUploadedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UploadedAt
}

// GetUploadedAtOk returns a tuple with the UploadedAt field value
// and a boolean to check if the value has been set.
func (o *FileFieldResponse) GetUploadedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UploadedAt, true
}

// SetUploadedAt sets field value
func (o *FileFieldResponse) SetUploadedAt(v time.Time) {
	o.UploadedAt = v
}

func (o FileFieldResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FileFieldResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: url is readOnly
	// skip: thumbnails is readOnly
	toSerialize["visible_name"] = o.VisibleName
	toSerialize["name"] = o.Name
	toSerialize["size"] = o.Size
	toSerialize["mime_type"] = o.MimeType
	toSerialize["is_image"] = o.IsImage
	toSerialize["image_width"] = o.ImageWidth
	toSerialize["image_height"] = o.ImageHeight
	toSerialize["uploaded_at"] = o.UploadedAt
	return toSerialize, nil
}

type NullableFileFieldResponse struct {
	value *FileFieldResponse
	isSet bool
}

func (v NullableFileFieldResponse) Get() *FileFieldResponse {
	return v.value
}

func (v *NullableFileFieldResponse) Set(val *FileFieldResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFileFieldResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFileFieldResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileFieldResponse(val *FileFieldResponse) *NullableFileFieldResponse {
	return &NullableFileFieldResponse{value: val, isSet: true}
}

func (v NullableFileFieldResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileFieldResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


