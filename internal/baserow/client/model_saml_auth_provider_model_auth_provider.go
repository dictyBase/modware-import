/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the SamlAuthProviderModelAuthProvider type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SamlAuthProviderModelAuthProvider{}

// SamlAuthProviderModelAuthProvider struct for SamlAuthProviderModelAuthProvider
type SamlAuthProviderModelAuthProvider struct {
	Id int32 `json:"id"`
	// The type of the related field.
	Type string `json:"type"`
	// The email domain registered with this provider.
	Domain string `json:"domain"`
	// Whether the provider is enabled or not.
	Enabled *bool `json:"enabled,omitempty"`
	// The SAML metadata XML provided by the IdP.
	Metadata string `json:"metadata"`
	// Whether or not a user sign in correctly with this SAML provider.
	IsVerified bool `json:"is_verified"`
}

// NewSamlAuthProviderModelAuthProvider instantiates a new SamlAuthProviderModelAuthProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSamlAuthProviderModelAuthProvider(id int32, type_ string, domain string, metadata string, isVerified bool) *SamlAuthProviderModelAuthProvider {
	this := SamlAuthProviderModelAuthProvider{}
	this.Id = id
	this.Type = type_
	this.Domain = domain
	this.Metadata = metadata
	this.IsVerified = isVerified
	return &this
}

// NewSamlAuthProviderModelAuthProviderWithDefaults instantiates a new SamlAuthProviderModelAuthProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSamlAuthProviderModelAuthProviderWithDefaults() *SamlAuthProviderModelAuthProvider {
	this := SamlAuthProviderModelAuthProvider{}
	return &this
}

// GetId returns the Id field value
func (o *SamlAuthProviderModelAuthProvider) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SamlAuthProviderModelAuthProvider) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SamlAuthProviderModelAuthProvider) SetId(v int32) {
	o.Id = v
}

// GetType returns the Type field value
func (o *SamlAuthProviderModelAuthProvider) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SamlAuthProviderModelAuthProvider) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SamlAuthProviderModelAuthProvider) SetType(v string) {
	o.Type = v
}

// GetDomain returns the Domain field value
func (o *SamlAuthProviderModelAuthProvider) GetDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Domain
}

// GetDomainOk returns a tuple with the Domain field value
// and a boolean to check if the value has been set.
func (o *SamlAuthProviderModelAuthProvider) GetDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Domain, true
}

// SetDomain sets field value
func (o *SamlAuthProviderModelAuthProvider) SetDomain(v string) {
	o.Domain = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *SamlAuthProviderModelAuthProvider) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlAuthProviderModelAuthProvider) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *SamlAuthProviderModelAuthProvider) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *SamlAuthProviderModelAuthProvider) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetMetadata returns the Metadata field value
func (o *SamlAuthProviderModelAuthProvider) GetMetadata() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *SamlAuthProviderModelAuthProvider) GetMetadataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *SamlAuthProviderModelAuthProvider) SetMetadata(v string) {
	o.Metadata = v
}

// GetIsVerified returns the IsVerified field value
func (o *SamlAuthProviderModelAuthProvider) GetIsVerified() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsVerified
}

// GetIsVerifiedOk returns a tuple with the IsVerified field value
// and a boolean to check if the value has been set.
func (o *SamlAuthProviderModelAuthProvider) GetIsVerifiedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsVerified, true
}

// SetIsVerified sets field value
func (o *SamlAuthProviderModelAuthProvider) SetIsVerified(v bool) {
	o.IsVerified = v
}

func (o SamlAuthProviderModelAuthProvider) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SamlAuthProviderModelAuthProvider) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: id is readOnly
	// skip: type is readOnly
	toSerialize["domain"] = o.Domain
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	toSerialize["metadata"] = o.Metadata
	// skip: is_verified is readOnly
	return toSerialize, nil
}

type NullableSamlAuthProviderModelAuthProvider struct {
	value *SamlAuthProviderModelAuthProvider
	isSet bool
}

func (v NullableSamlAuthProviderModelAuthProvider) Get() *SamlAuthProviderModelAuthProvider {
	return v.value
}

func (v *NullableSamlAuthProviderModelAuthProvider) Set(val *SamlAuthProviderModelAuthProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableSamlAuthProviderModelAuthProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableSamlAuthProviderModelAuthProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSamlAuthProviderModelAuthProvider(val *SamlAuthProviderModelAuthProvider) *NullableSamlAuthProviderModelAuthProvider {
	return &NullableSamlAuthProviderModelAuthProvider{value: val, isSet: true}
}

func (v NullableSamlAuthProviderModelAuthProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSamlAuthProviderModelAuthProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


