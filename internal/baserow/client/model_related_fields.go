/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the RelatedFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RelatedFields{}

// RelatedFields struct for RelatedFields
type RelatedFields struct {
	// A list of related fields which also changed.
	RelatedFields []Field `json:"related_fields"`
}

// NewRelatedFields instantiates a new RelatedFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRelatedFields(relatedFields []Field) *RelatedFields {
	this := RelatedFields{}
	this.RelatedFields = relatedFields
	return &this
}

// NewRelatedFieldsWithDefaults instantiates a new RelatedFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRelatedFieldsWithDefaults() *RelatedFields {
	this := RelatedFields{}
	return &this
}

// GetRelatedFields returns the RelatedFields field value
func (o *RelatedFields) GetRelatedFields() []Field {
	if o == nil {
		var ret []Field
		return ret
	}

	return o.RelatedFields
}

// GetRelatedFieldsOk returns a tuple with the RelatedFields field value
// and a boolean to check if the value has been set.
func (o *RelatedFields) GetRelatedFieldsOk() ([]Field, bool) {
	if o == nil {
		return nil, false
	}
	return o.RelatedFields, true
}

// SetRelatedFields sets field value
func (o *RelatedFields) SetRelatedFields(v []Field) {
	o.RelatedFields = v
}

func (o RelatedFields) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RelatedFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: related_fields is readOnly
	return toSerialize, nil
}

type NullableRelatedFields struct {
	value *RelatedFields
	isSet bool
}

func (v NullableRelatedFields) Get() *RelatedFields {
	return v.value
}

func (v *NullableRelatedFields) Set(val *RelatedFields) {
	v.value = val
	v.isSet = true
}

func (v NullableRelatedFields) IsSet() bool {
	return v.isSet
}

func (v *NullableRelatedFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRelatedFields(val *RelatedFields) *NullableRelatedFields {
	return &NullableRelatedFields{value: val, isSet: true}
}

func (v NullableRelatedFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRelatedFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


