/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the OrderWorkspaces type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderWorkspaces{}

// OrderWorkspaces struct for OrderWorkspaces
type OrderWorkspaces struct {
	// Workspace ids in the desired order.
	Workspaces []int32 `json:"workspaces"`
}

// NewOrderWorkspaces instantiates a new OrderWorkspaces object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderWorkspaces(workspaces []int32) *OrderWorkspaces {
	this := OrderWorkspaces{}
	this.Workspaces = workspaces
	return &this
}

// NewOrderWorkspacesWithDefaults instantiates a new OrderWorkspaces object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderWorkspacesWithDefaults() *OrderWorkspaces {
	this := OrderWorkspaces{}
	return &this
}

// GetWorkspaces returns the Workspaces field value
func (o *OrderWorkspaces) GetWorkspaces() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.Workspaces
}

// GetWorkspacesOk returns a tuple with the Workspaces field value
// and a boolean to check if the value has been set.
func (o *OrderWorkspaces) GetWorkspacesOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Workspaces, true
}

// SetWorkspaces sets field value
func (o *OrderWorkspaces) SetWorkspaces(v []int32) {
	o.Workspaces = v
}

func (o OrderWorkspaces) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderWorkspaces) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["workspaces"] = o.Workspaces
	return toSerialize, nil
}

type NullableOrderWorkspaces struct {
	value *OrderWorkspaces
	isSet bool
}

func (v NullableOrderWorkspaces) Get() *OrderWorkspaces {
	return v.value
}

func (v *NullableOrderWorkspaces) Set(val *OrderWorkspaces) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderWorkspaces) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderWorkspaces) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderWorkspaces(val *OrderWorkspaces) *NullableOrderWorkspaces {
	return &NullableOrderWorkspaces{value: val, isSet: true}
}

func (v NullableOrderWorkspaces) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderWorkspaces) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


