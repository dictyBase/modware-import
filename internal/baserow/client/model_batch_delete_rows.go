/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the BatchDeleteRows type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BatchDeleteRows{}

// BatchDeleteRows struct for BatchDeleteRows
type BatchDeleteRows struct {
	Items []int32 `json:"items"`
}

// NewBatchDeleteRows instantiates a new BatchDeleteRows object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchDeleteRows(items []int32) *BatchDeleteRows {
	this := BatchDeleteRows{}
	this.Items = items
	return &this
}

// NewBatchDeleteRowsWithDefaults instantiates a new BatchDeleteRows object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchDeleteRowsWithDefaults() *BatchDeleteRows {
	this := BatchDeleteRows{}
	return &this
}

// GetItems returns the Items field value
func (o *BatchDeleteRows) GetItems() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *BatchDeleteRows) GetItemsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *BatchDeleteRows) SetItems(v []int32) {
	o.Items = v
}

func (o BatchDeleteRows) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BatchDeleteRows) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["items"] = o.Items
	return toSerialize, nil
}

type NullableBatchDeleteRows struct {
	value *BatchDeleteRows
	isSet bool
}

func (v NullableBatchDeleteRows) Get() *BatchDeleteRows {
	return v.value
}

func (v *NullableBatchDeleteRows) Set(val *BatchDeleteRows) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchDeleteRows) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchDeleteRows) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchDeleteRows(val *BatchDeleteRows) *NullableBatchDeleteRows {
	return &NullableBatchDeleteRows{value: val, isSet: true}
}

func (v NullableBatchDeleteRows) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchDeleteRows) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


