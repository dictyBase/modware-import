/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the AdminDashboardPerDay type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdminDashboardPerDay{}

// AdminDashboardPerDay struct for AdminDashboardPerDay
type AdminDashboardPerDay struct {
	Date string `json:"date"`
	Count int32 `json:"count"`
}

// NewAdminDashboardPerDay instantiates a new AdminDashboardPerDay object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdminDashboardPerDay(date string, count int32) *AdminDashboardPerDay {
	this := AdminDashboardPerDay{}
	this.Date = date
	this.Count = count
	return &this
}

// NewAdminDashboardPerDayWithDefaults instantiates a new AdminDashboardPerDay object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdminDashboardPerDayWithDefaults() *AdminDashboardPerDay {
	this := AdminDashboardPerDay{}
	return &this
}

// GetDate returns the Date field value
func (o *AdminDashboardPerDay) GetDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *AdminDashboardPerDay) GetDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *AdminDashboardPerDay) SetDate(v string) {
	o.Date = v
}

// GetCount returns the Count field value
func (o *AdminDashboardPerDay) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *AdminDashboardPerDay) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *AdminDashboardPerDay) SetCount(v int32) {
	o.Count = v
}

func (o AdminDashboardPerDay) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdminDashboardPerDay) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["date"] = o.Date
	toSerialize["count"] = o.Count
	return toSerialize, nil
}

type NullableAdminDashboardPerDay struct {
	value *AdminDashboardPerDay
	isSet bool
}

func (v NullableAdminDashboardPerDay) Get() *AdminDashboardPerDay {
	return v.value
}

func (v *NullableAdminDashboardPerDay) Set(val *AdminDashboardPerDay) {
	v.value = val
	v.isSet = true
}

func (v NullableAdminDashboardPerDay) IsSet() bool {
	return v.isSet
}

func (v *NullableAdminDashboardPerDay) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdminDashboardPerDay(val *AdminDashboardPerDay) *NullableAdminDashboardPerDay {
	return &NullableAdminDashboardPerDay{value: val, isSet: true}
}

func (v NullableAdminDashboardPerDay) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdminDashboardPerDay) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


