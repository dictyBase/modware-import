/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the FormViewSubmitted type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FormViewSubmitted{}

// FormViewSubmitted struct for FormViewSubmitted
type FormViewSubmitted struct {
	SubmitAction *SubmitActionEnum `json:"submit_action,omitempty"`
	// If the `submit_action` is MESSAGE, then this message will be shown to the visitor after submitting the form.
	SubmitActionMessage *string `json:"submit_action_message,omitempty"`
	// If the `submit_action` is REDIRECT,then the visitors will be redirected to the this URL after submitting the form.
	SubmitActionRedirectUrl *string `json:"submit_action_redirect_url,omitempty"`
	RowId int32 `json:"row_id"`
}

// NewFormViewSubmitted instantiates a new FormViewSubmitted object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFormViewSubmitted(rowId int32) *FormViewSubmitted {
	this := FormViewSubmitted{}
	this.RowId = rowId
	return &this
}

// NewFormViewSubmittedWithDefaults instantiates a new FormViewSubmitted object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFormViewSubmittedWithDefaults() *FormViewSubmitted {
	this := FormViewSubmitted{}
	return &this
}

// GetSubmitAction returns the SubmitAction field value if set, zero value otherwise.
func (o *FormViewSubmitted) GetSubmitAction() SubmitActionEnum {
	if o == nil || IsNil(o.SubmitAction) {
		var ret SubmitActionEnum
		return ret
	}
	return *o.SubmitAction
}

// GetSubmitActionOk returns a tuple with the SubmitAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormViewSubmitted) GetSubmitActionOk() (*SubmitActionEnum, bool) {
	if o == nil || IsNil(o.SubmitAction) {
		return nil, false
	}
	return o.SubmitAction, true
}

// HasSubmitAction returns a boolean if a field has been set.
func (o *FormViewSubmitted) HasSubmitAction() bool {
	if o != nil && !IsNil(o.SubmitAction) {
		return true
	}

	return false
}

// SetSubmitAction gets a reference to the given SubmitActionEnum and assigns it to the SubmitAction field.
func (o *FormViewSubmitted) SetSubmitAction(v SubmitActionEnum) {
	o.SubmitAction = &v
}

// GetSubmitActionMessage returns the SubmitActionMessage field value if set, zero value otherwise.
func (o *FormViewSubmitted) GetSubmitActionMessage() string {
	if o == nil || IsNil(o.SubmitActionMessage) {
		var ret string
		return ret
	}
	return *o.SubmitActionMessage
}

// GetSubmitActionMessageOk returns a tuple with the SubmitActionMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormViewSubmitted) GetSubmitActionMessageOk() (*string, bool) {
	if o == nil || IsNil(o.SubmitActionMessage) {
		return nil, false
	}
	return o.SubmitActionMessage, true
}

// HasSubmitActionMessage returns a boolean if a field has been set.
func (o *FormViewSubmitted) HasSubmitActionMessage() bool {
	if o != nil && !IsNil(o.SubmitActionMessage) {
		return true
	}

	return false
}

// SetSubmitActionMessage gets a reference to the given string and assigns it to the SubmitActionMessage field.
func (o *FormViewSubmitted) SetSubmitActionMessage(v string) {
	o.SubmitActionMessage = &v
}

// GetSubmitActionRedirectUrl returns the SubmitActionRedirectUrl field value if set, zero value otherwise.
func (o *FormViewSubmitted) GetSubmitActionRedirectUrl() string {
	if o == nil || IsNil(o.SubmitActionRedirectUrl) {
		var ret string
		return ret
	}
	return *o.SubmitActionRedirectUrl
}

// GetSubmitActionRedirectUrlOk returns a tuple with the SubmitActionRedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormViewSubmitted) GetSubmitActionRedirectUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SubmitActionRedirectUrl) {
		return nil, false
	}
	return o.SubmitActionRedirectUrl, true
}

// HasSubmitActionRedirectUrl returns a boolean if a field has been set.
func (o *FormViewSubmitted) HasSubmitActionRedirectUrl() bool {
	if o != nil && !IsNil(o.SubmitActionRedirectUrl) {
		return true
	}

	return false
}

// SetSubmitActionRedirectUrl gets a reference to the given string and assigns it to the SubmitActionRedirectUrl field.
func (o *FormViewSubmitted) SetSubmitActionRedirectUrl(v string) {
	o.SubmitActionRedirectUrl = &v
}

// GetRowId returns the RowId field value
func (o *FormViewSubmitted) GetRowId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RowId
}

// GetRowIdOk returns a tuple with the RowId field value
// and a boolean to check if the value has been set.
func (o *FormViewSubmitted) GetRowIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RowId, true
}

// SetRowId sets field value
func (o *FormViewSubmitted) SetRowId(v int32) {
	o.RowId = v
}

func (o FormViewSubmitted) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FormViewSubmitted) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SubmitAction) {
		toSerialize["submit_action"] = o.SubmitAction
	}
	if !IsNil(o.SubmitActionMessage) {
		toSerialize["submit_action_message"] = o.SubmitActionMessage
	}
	if !IsNil(o.SubmitActionRedirectUrl) {
		toSerialize["submit_action_redirect_url"] = o.SubmitActionRedirectUrl
	}
	toSerialize["row_id"] = o.RowId
	return toSerialize, nil
}

type NullableFormViewSubmitted struct {
	value *FormViewSubmitted
	isSet bool
}

func (v NullableFormViewSubmitted) Get() *FormViewSubmitted {
	return v.value
}

func (v *NullableFormViewSubmitted) Set(val *FormViewSubmitted) {
	v.value = val
	v.isSet = true
}

func (v NullableFormViewSubmitted) IsSet() bool {
	return v.isSet
}

func (v *NullableFormViewSubmitted) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFormViewSubmitted(val *FormViewSubmitted) *NullableFormViewSubmitted {
	return &NullableFormViewSubmitted{value: val, isSet: true}
}

func (v NullableFormViewSubmitted) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFormViewSubmitted) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


