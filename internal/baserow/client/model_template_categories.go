/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the TemplateCategories type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateCategories{}

// TemplateCategories struct for TemplateCategories
type TemplateCategories struct {
	Id int32 `json:"id"`
	Name string `json:"name"`
	Templates []Template `json:"templates"`
}

// NewTemplateCategories instantiates a new TemplateCategories object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateCategories(id int32, name string, templates []Template) *TemplateCategories {
	this := TemplateCategories{}
	this.Id = id
	this.Name = name
	this.Templates = templates
	return &this
}

// NewTemplateCategoriesWithDefaults instantiates a new TemplateCategories object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateCategoriesWithDefaults() *TemplateCategories {
	this := TemplateCategories{}
	return &this
}

// GetId returns the Id field value
func (o *TemplateCategories) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TemplateCategories) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TemplateCategories) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *TemplateCategories) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TemplateCategories) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TemplateCategories) SetName(v string) {
	o.Name = v
}

// GetTemplates returns the Templates field value
func (o *TemplateCategories) GetTemplates() []Template {
	if o == nil {
		var ret []Template
		return ret
	}

	return o.Templates
}

// GetTemplatesOk returns a tuple with the Templates field value
// and a boolean to check if the value has been set.
func (o *TemplateCategories) GetTemplatesOk() ([]Template, bool) {
	if o == nil {
		return nil, false
	}
	return o.Templates, true
}

// SetTemplates sets field value
func (o *TemplateCategories) SetTemplates(v []Template) {
	o.Templates = v
}

func (o TemplateCategories) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateCategories) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: id is readOnly
	toSerialize["name"] = o.Name
	// skip: templates is readOnly
	return toSerialize, nil
}

type NullableTemplateCategories struct {
	value *TemplateCategories
	isSet bool
}

func (v NullableTemplateCategories) Get() *TemplateCategories {
	return v.value
}

func (v *NullableTemplateCategories) Set(val *TemplateCategories) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateCategories) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateCategories) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateCategories(val *TemplateCategories) *NullableTemplateCategories {
	return &NullableTemplateCategories{value: val, isSet: true}
}

func (v NullableTemplateCategories) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateCategories) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


