/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the KanbanViewExampleResponseOPTIONID type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KanbanViewExampleResponseOPTIONID{}

// KanbanViewExampleResponseOPTIONID Every select option related to the view's single select field can have its own entry like this.
type KanbanViewExampleResponseOPTIONID struct {
	// The total count of rows that are included in this group.
	Count int32 `json:"count"`
	// All the rows that belong in this group related with the provided `limit` and `offset`.
	Results []ExampleRowResponse `json:"results"`
}

// NewKanbanViewExampleResponseOPTIONID instantiates a new KanbanViewExampleResponseOPTIONID object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKanbanViewExampleResponseOPTIONID(count int32, results []ExampleRowResponse) *KanbanViewExampleResponseOPTIONID {
	this := KanbanViewExampleResponseOPTIONID{}
	this.Count = count
	this.Results = results
	return &this
}

// NewKanbanViewExampleResponseOPTIONIDWithDefaults instantiates a new KanbanViewExampleResponseOPTIONID object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKanbanViewExampleResponseOPTIONIDWithDefaults() *KanbanViewExampleResponseOPTIONID {
	this := KanbanViewExampleResponseOPTIONID{}
	return &this
}

// GetCount returns the Count field value
func (o *KanbanViewExampleResponseOPTIONID) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *KanbanViewExampleResponseOPTIONID) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *KanbanViewExampleResponseOPTIONID) SetCount(v int32) {
	o.Count = v
}

// GetResults returns the Results field value
func (o *KanbanViewExampleResponseOPTIONID) GetResults() []ExampleRowResponse {
	if o == nil {
		var ret []ExampleRowResponse
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *KanbanViewExampleResponseOPTIONID) GetResultsOk() ([]ExampleRowResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value
func (o *KanbanViewExampleResponseOPTIONID) SetResults(v []ExampleRowResponse) {
	o.Results = v
}

func (o KanbanViewExampleResponseOPTIONID) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KanbanViewExampleResponseOPTIONID) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["count"] = o.Count
	toSerialize["results"] = o.Results
	return toSerialize, nil
}

type NullableKanbanViewExampleResponseOPTIONID struct {
	value *KanbanViewExampleResponseOPTIONID
	isSet bool
}

func (v NullableKanbanViewExampleResponseOPTIONID) Get() *KanbanViewExampleResponseOPTIONID {
	return v.value
}

func (v *NullableKanbanViewExampleResponseOPTIONID) Set(val *KanbanViewExampleResponseOPTIONID) {
	v.value = val
	v.isSet = true
}

func (v NullableKanbanViewExampleResponseOPTIONID) IsSet() bool {
	return v.isSet
}

func (v *NullableKanbanViewExampleResponseOPTIONID) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKanbanViewExampleResponseOPTIONID(val *KanbanViewExampleResponseOPTIONID) *NullableKanbanViewExampleResponseOPTIONID {
	return &NullableKanbanViewExampleResponseOPTIONID{value: val, isSet: true}
}

func (v NullableKanbanViewExampleResponseOPTIONID) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKanbanViewExampleResponseOPTIONID) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


