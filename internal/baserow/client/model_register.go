/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the Register type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Register{}

// Register struct for Register
type Register struct {
	Name string `json:"name"`
	// The email address is also going to be the username.
	Email string `json:"email"`
	Password string `json:"password"`
	// An ISO 639 language code (with optional variant) selected by the user. Ex: en-GB.
	Language *string `json:"language,omitempty"`
	// Indicates whether an authentication JWT should be generated and be included in the response.
	Authenticate *bool `json:"authenticate,omitempty"`
	// DEPRECATED: Please use `workspace_invitation_token` which this attribute is being renamed to in 2024.
	GroupInvitationToken *string `json:"group_invitation_token,omitempty"`
	// If provided and valid, the user accepts the workspace invitation and will have access to the workspace after signing up.
	WorkspaceInvitationToken *string `json:"workspace_invitation_token,omitempty"`
	// The id of the template that must be installed after creating the account. This only works if the `workspace_invitation_token` param is not provided.
	TemplateId *int32 `json:"template_id,omitempty"`
}

// NewRegister instantiates a new Register object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegister(name string, email string, password string) *Register {
	this := Register{}
	this.Name = name
	this.Email = email
	this.Password = password
	var language string = "en"
	this.Language = &language
	var authenticate bool = false
	this.Authenticate = &authenticate
	return &this
}

// NewRegisterWithDefaults instantiates a new Register object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisterWithDefaults() *Register {
	this := Register{}
	var language string = "en"
	this.Language = &language
	var authenticate bool = false
	this.Authenticate = &authenticate
	return &this
}

// GetName returns the Name field value
func (o *Register) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Register) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Register) SetName(v string) {
	o.Name = v
}

// GetEmail returns the Email field value
func (o *Register) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *Register) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *Register) SetEmail(v string) {
	o.Email = v
}

// GetPassword returns the Password field value
func (o *Register) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *Register) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *Register) SetPassword(v string) {
	o.Password = v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *Register) GetLanguage() string {
	if o == nil || IsNil(o.Language) {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Register) GetLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.Language) {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *Register) HasLanguage() bool {
	if o != nil && !IsNil(o.Language) {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *Register) SetLanguage(v string) {
	o.Language = &v
}

// GetAuthenticate returns the Authenticate field value if set, zero value otherwise.
func (o *Register) GetAuthenticate() bool {
	if o == nil || IsNil(o.Authenticate) {
		var ret bool
		return ret
	}
	return *o.Authenticate
}

// GetAuthenticateOk returns a tuple with the Authenticate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Register) GetAuthenticateOk() (*bool, bool) {
	if o == nil || IsNil(o.Authenticate) {
		return nil, false
	}
	return o.Authenticate, true
}

// HasAuthenticate returns a boolean if a field has been set.
func (o *Register) HasAuthenticate() bool {
	if o != nil && !IsNil(o.Authenticate) {
		return true
	}

	return false
}

// SetAuthenticate gets a reference to the given bool and assigns it to the Authenticate field.
func (o *Register) SetAuthenticate(v bool) {
	o.Authenticate = &v
}

// GetGroupInvitationToken returns the GroupInvitationToken field value if set, zero value otherwise.
func (o *Register) GetGroupInvitationToken() string {
	if o == nil || IsNil(o.GroupInvitationToken) {
		var ret string
		return ret
	}
	return *o.GroupInvitationToken
}

// GetGroupInvitationTokenOk returns a tuple with the GroupInvitationToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Register) GetGroupInvitationTokenOk() (*string, bool) {
	if o == nil || IsNil(o.GroupInvitationToken) {
		return nil, false
	}
	return o.GroupInvitationToken, true
}

// HasGroupInvitationToken returns a boolean if a field has been set.
func (o *Register) HasGroupInvitationToken() bool {
	if o != nil && !IsNil(o.GroupInvitationToken) {
		return true
	}

	return false
}

// SetGroupInvitationToken gets a reference to the given string and assigns it to the GroupInvitationToken field.
func (o *Register) SetGroupInvitationToken(v string) {
	o.GroupInvitationToken = &v
}

// GetWorkspaceInvitationToken returns the WorkspaceInvitationToken field value if set, zero value otherwise.
func (o *Register) GetWorkspaceInvitationToken() string {
	if o == nil || IsNil(o.WorkspaceInvitationToken) {
		var ret string
		return ret
	}
	return *o.WorkspaceInvitationToken
}

// GetWorkspaceInvitationTokenOk returns a tuple with the WorkspaceInvitationToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Register) GetWorkspaceInvitationTokenOk() (*string, bool) {
	if o == nil || IsNil(o.WorkspaceInvitationToken) {
		return nil, false
	}
	return o.WorkspaceInvitationToken, true
}

// HasWorkspaceInvitationToken returns a boolean if a field has been set.
func (o *Register) HasWorkspaceInvitationToken() bool {
	if o != nil && !IsNil(o.WorkspaceInvitationToken) {
		return true
	}

	return false
}

// SetWorkspaceInvitationToken gets a reference to the given string and assigns it to the WorkspaceInvitationToken field.
func (o *Register) SetWorkspaceInvitationToken(v string) {
	o.WorkspaceInvitationToken = &v
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise.
func (o *Register) GetTemplateId() int32 {
	if o == nil || IsNil(o.TemplateId) {
		var ret int32
		return ret
	}
	return *o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Register) GetTemplateIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TemplateId) {
		return nil, false
	}
	return o.TemplateId, true
}

// HasTemplateId returns a boolean if a field has been set.
func (o *Register) HasTemplateId() bool {
	if o != nil && !IsNil(o.TemplateId) {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given int32 and assigns it to the TemplateId field.
func (o *Register) SetTemplateId(v int32) {
	o.TemplateId = &v
}

func (o Register) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Register) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["email"] = o.Email
	toSerialize["password"] = o.Password
	if !IsNil(o.Language) {
		toSerialize["language"] = o.Language
	}
	if !IsNil(o.Authenticate) {
		toSerialize["authenticate"] = o.Authenticate
	}
	if !IsNil(o.GroupInvitationToken) {
		toSerialize["group_invitation_token"] = o.GroupInvitationToken
	}
	if !IsNil(o.WorkspaceInvitationToken) {
		toSerialize["workspace_invitation_token"] = o.WorkspaceInvitationToken
	}
	if !IsNil(o.TemplateId) {
		toSerialize["template_id"] = o.TemplateId
	}
	return toSerialize, nil
}

type NullableRegister struct {
	value *Register
	isSet bool
}

func (v NullableRegister) Get() *Register {
	return v.value
}

func (v *NullableRegister) Set(val *Register) {
	v.value = val
	v.isSet = true
}

func (v NullableRegister) IsSet() bool {
	return v.isSet
}

func (v *NullableRegister) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegister(val *Register) *NullableRegister {
	return &NullableRegister{value: val, isSet: true}
}

func (v NullableRegister) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegister) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


