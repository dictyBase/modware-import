/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GitLabAuthProviderModelAuthProvider type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GitLabAuthProviderModelAuthProvider{}

// GitLabAuthProviderModelAuthProvider struct for GitLabAuthProviderModelAuthProvider
type GitLabAuthProviderModelAuthProvider struct {
	Id int32 `json:"id"`
	// The type of the related field.
	Type string `json:"type"`
	Domain NullableString `json:"domain,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Name string `json:"name"`
	// Base URL of the authorization server
	BaseUrl string `json:"base_url"`
	// App ID, or consumer key
	ClientId string `json:"client_id"`
	// API secret, client secret, or consumer secret
	Secret string `json:"secret"`
}

// NewGitLabAuthProviderModelAuthProvider instantiates a new GitLabAuthProviderModelAuthProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGitLabAuthProviderModelAuthProvider(id int32, type_ string, name string, baseUrl string, clientId string, secret string) *GitLabAuthProviderModelAuthProvider {
	this := GitLabAuthProviderModelAuthProvider{}
	this.Id = id
	this.Type = type_
	this.Name = name
	this.BaseUrl = baseUrl
	this.ClientId = clientId
	this.Secret = secret
	return &this
}

// NewGitLabAuthProviderModelAuthProviderWithDefaults instantiates a new GitLabAuthProviderModelAuthProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGitLabAuthProviderModelAuthProviderWithDefaults() *GitLabAuthProviderModelAuthProvider {
	this := GitLabAuthProviderModelAuthProvider{}
	return &this
}

// GetId returns the Id field value
func (o *GitLabAuthProviderModelAuthProvider) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GitLabAuthProviderModelAuthProvider) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GitLabAuthProviderModelAuthProvider) SetId(v int32) {
	o.Id = v
}

// GetType returns the Type field value
func (o *GitLabAuthProviderModelAuthProvider) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *GitLabAuthProviderModelAuthProvider) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *GitLabAuthProviderModelAuthProvider) SetType(v string) {
	o.Type = v
}

// GetDomain returns the Domain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GitLabAuthProviderModelAuthProvider) GetDomain() string {
	if o == nil || IsNil(o.Domain.Get()) {
		var ret string
		return ret
	}
	return *o.Domain.Get()
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GitLabAuthProviderModelAuthProvider) GetDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Domain.Get(), o.Domain.IsSet()
}

// HasDomain returns a boolean if a field has been set.
func (o *GitLabAuthProviderModelAuthProvider) HasDomain() bool {
	if o != nil && o.Domain.IsSet() {
		return true
	}

	return false
}

// SetDomain gets a reference to the given NullableString and assigns it to the Domain field.
func (o *GitLabAuthProviderModelAuthProvider) SetDomain(v string) {
	o.Domain.Set(&v)
}
// SetDomainNil sets the value for Domain to be an explicit nil
func (o *GitLabAuthProviderModelAuthProvider) SetDomainNil() {
	o.Domain.Set(nil)
}

// UnsetDomain ensures that no value is present for Domain, not even an explicit nil
func (o *GitLabAuthProviderModelAuthProvider) UnsetDomain() {
	o.Domain.Unset()
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *GitLabAuthProviderModelAuthProvider) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GitLabAuthProviderModelAuthProvider) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *GitLabAuthProviderModelAuthProvider) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *GitLabAuthProviderModelAuthProvider) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetName returns the Name field value
func (o *GitLabAuthProviderModelAuthProvider) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GitLabAuthProviderModelAuthProvider) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GitLabAuthProviderModelAuthProvider) SetName(v string) {
	o.Name = v
}

// GetBaseUrl returns the BaseUrl field value
func (o *GitLabAuthProviderModelAuthProvider) GetBaseUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BaseUrl
}

// GetBaseUrlOk returns a tuple with the BaseUrl field value
// and a boolean to check if the value has been set.
func (o *GitLabAuthProviderModelAuthProvider) GetBaseUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseUrl, true
}

// SetBaseUrl sets field value
func (o *GitLabAuthProviderModelAuthProvider) SetBaseUrl(v string) {
	o.BaseUrl = v
}

// GetClientId returns the ClientId field value
func (o *GitLabAuthProviderModelAuthProvider) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *GitLabAuthProviderModelAuthProvider) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *GitLabAuthProviderModelAuthProvider) SetClientId(v string) {
	o.ClientId = v
}

// GetSecret returns the Secret field value
func (o *GitLabAuthProviderModelAuthProvider) GetSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Secret
}

// GetSecretOk returns a tuple with the Secret field value
// and a boolean to check if the value has been set.
func (o *GitLabAuthProviderModelAuthProvider) GetSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Secret, true
}

// SetSecret sets field value
func (o *GitLabAuthProviderModelAuthProvider) SetSecret(v string) {
	o.Secret = v
}

func (o GitLabAuthProviderModelAuthProvider) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GitLabAuthProviderModelAuthProvider) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: id is readOnly
	// skip: type is readOnly
	if o.Domain.IsSet() {
		toSerialize["domain"] = o.Domain.Get()
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	toSerialize["name"] = o.Name
	toSerialize["base_url"] = o.BaseUrl
	toSerialize["client_id"] = o.ClientId
	toSerialize["secret"] = o.Secret
	return toSerialize, nil
}

type NullableGitLabAuthProviderModelAuthProvider struct {
	value *GitLabAuthProviderModelAuthProvider
	isSet bool
}

func (v NullableGitLabAuthProviderModelAuthProvider) Get() *GitLabAuthProviderModelAuthProvider {
	return v.value
}

func (v *NullableGitLabAuthProviderModelAuthProvider) Set(val *GitLabAuthProviderModelAuthProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableGitLabAuthProviderModelAuthProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableGitLabAuthProviderModelAuthProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGitLabAuthProviderModelAuthProvider(val *GitLabAuthProviderModelAuthProvider) *NullableGitLabAuthProviderModelAuthProvider {
	return &NullableGitLabAuthProviderModelAuthProvider{value: val, isSet: true}
}

func (v NullableGitLabAuthProviderModelAuthProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGitLabAuthProviderModelAuthProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


