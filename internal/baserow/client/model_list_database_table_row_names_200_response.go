/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ListDatabaseTableRowNames200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListDatabaseTableRowNames200Response{}

// ListDatabaseTableRowNames200Response struct for ListDatabaseTableRowNames200Response
type ListDatabaseTableRowNames200Response struct {
	TableId *ListDatabaseTableRowNames200ResponseTableId `json:"{table_id}*,omitempty"`
}

// NewListDatabaseTableRowNames200Response instantiates a new ListDatabaseTableRowNames200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListDatabaseTableRowNames200Response() *ListDatabaseTableRowNames200Response {
	this := ListDatabaseTableRowNames200Response{}
	return &this
}

// NewListDatabaseTableRowNames200ResponseWithDefaults instantiates a new ListDatabaseTableRowNames200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListDatabaseTableRowNames200ResponseWithDefaults() *ListDatabaseTableRowNames200Response {
	this := ListDatabaseTableRowNames200Response{}
	return &this
}

// GetTableId returns the TableId field value if set, zero value otherwise.
func (o *ListDatabaseTableRowNames200Response) GetTableId() ListDatabaseTableRowNames200ResponseTableId {
	if o == nil || IsNil(o.TableId) {
		var ret ListDatabaseTableRowNames200ResponseTableId
		return ret
	}
	return *o.TableId
}

// GetTableIdOk returns a tuple with the TableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDatabaseTableRowNames200Response) GetTableIdOk() (*ListDatabaseTableRowNames200ResponseTableId, bool) {
	if o == nil || IsNil(o.TableId) {
		return nil, false
	}
	return o.TableId, true
}

// HasTableId returns a boolean if a field has been set.
func (o *ListDatabaseTableRowNames200Response) HasTableId() bool {
	if o != nil && !IsNil(o.TableId) {
		return true
	}

	return false
}

// SetTableId gets a reference to the given ListDatabaseTableRowNames200ResponseTableId and assigns it to the TableId field.
func (o *ListDatabaseTableRowNames200Response) SetTableId(v ListDatabaseTableRowNames200ResponseTableId) {
	o.TableId = &v
}

func (o ListDatabaseTableRowNames200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListDatabaseTableRowNames200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TableId) {
		toSerialize["{table_id}*"] = o.TableId
	}
	return toSerialize, nil
}

type NullableListDatabaseTableRowNames200Response struct {
	value *ListDatabaseTableRowNames200Response
	isSet bool
}

func (v NullableListDatabaseTableRowNames200Response) Get() *ListDatabaseTableRowNames200Response {
	return v.value
}

func (v *NullableListDatabaseTableRowNames200Response) Set(val *ListDatabaseTableRowNames200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListDatabaseTableRowNames200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListDatabaseTableRowNames200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListDatabaseTableRowNames200Response(val *ListDatabaseTableRowNames200Response) *NullableListDatabaseTableRowNames200Response {
	return &NullableListDatabaseTableRowNames200Response{value: val, isSet: true}
}

func (v NullableListDatabaseTableRowNames200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListDatabaseTableRowNames200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


