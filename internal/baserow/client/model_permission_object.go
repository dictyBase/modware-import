/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the PermissionObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PermissionObject{}

// PermissionObject struct for PermissionObject
type PermissionObject struct {
	// The permission manager name.
	Name string `json:"name"`
	// The content of the permission object for this permission manager.
	Permissions map[string]interface{} `json:"permissions"`
}

// NewPermissionObject instantiates a new PermissionObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPermissionObject(name string, permissions map[string]interface{}) *PermissionObject {
	this := PermissionObject{}
	this.Name = name
	this.Permissions = permissions
	return &this
}

// NewPermissionObjectWithDefaults instantiates a new PermissionObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPermissionObjectWithDefaults() *PermissionObject {
	this := PermissionObject{}
	return &this
}

// GetName returns the Name field value
func (o *PermissionObject) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PermissionObject) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PermissionObject) SetName(v string) {
	o.Name = v
}

// GetPermissions returns the Permissions field value
func (o *PermissionObject) GetPermissions() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *PermissionObject) GetPermissionsOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Permissions, true
}

// SetPermissions sets field value
func (o *PermissionObject) SetPermissions(v map[string]interface{}) {
	o.Permissions = v
}

func (o PermissionObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PermissionObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["permissions"] = o.Permissions
	return toSerialize, nil
}

type NullablePermissionObject struct {
	value *PermissionObject
	isSet bool
}

func (v NullablePermissionObject) Get() *PermissionObject {
	return v.value
}

func (v *NullablePermissionObject) Set(val *PermissionObject) {
	v.value = val
	v.isSet = true
}

func (v NullablePermissionObject) IsSet() bool {
	return v.isSet
}

func (v *NullablePermissionObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePermissionObject(val *PermissionObject) *NullablePermissionObject {
	return &NullablePermissionObject{value: val, isSet: true}
}

func (v NullablePermissionObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePermissionObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


