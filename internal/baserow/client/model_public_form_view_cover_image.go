/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// checks if the PublicFormViewCoverImage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicFormViewCoverImage{}

// PublicFormViewCoverImage The user file cover image that is displayed at the top of the form.
type PublicFormViewCoverImage struct {
	Size int32 `json:"size"`
	MimeType *string `json:"mime_type,omitempty"`
	IsImage *bool `json:"is_image,omitempty"`
	ImageWidth NullableInt32 `json:"image_width,omitempty"`
	ImageHeight NullableInt32 `json:"image_height,omitempty"`
	UploadedAt time.Time `json:"uploaded_at"`
	Url string `json:"url"`
	Thumbnails map[string]interface{} `json:"thumbnails"`
	Name string `json:"name"`
	OriginalName string `json:"original_name"`
}

// NewPublicFormViewCoverImage instantiates a new PublicFormViewCoverImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicFormViewCoverImage(size int32, uploadedAt time.Time, url string, thumbnails map[string]interface{}, name string, originalName string) *PublicFormViewCoverImage {
	this := PublicFormViewCoverImage{}
	this.Size = size
	this.UploadedAt = uploadedAt
	this.Url = url
	this.Thumbnails = thumbnails
	this.Name = name
	this.OriginalName = originalName
	return &this
}

// NewPublicFormViewCoverImageWithDefaults instantiates a new PublicFormViewCoverImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicFormViewCoverImageWithDefaults() *PublicFormViewCoverImage {
	this := PublicFormViewCoverImage{}
	return &this
}

// GetSize returns the Size field value
func (o *PublicFormViewCoverImage) GetSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *PublicFormViewCoverImage) GetSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *PublicFormViewCoverImage) SetSize(v int32) {
	o.Size = v
}

// GetMimeType returns the MimeType field value if set, zero value otherwise.
func (o *PublicFormViewCoverImage) GetMimeType() string {
	if o == nil || IsNil(o.MimeType) {
		var ret string
		return ret
	}
	return *o.MimeType
}

// GetMimeTypeOk returns a tuple with the MimeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicFormViewCoverImage) GetMimeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MimeType) {
		return nil, false
	}
	return o.MimeType, true
}

// HasMimeType returns a boolean if a field has been set.
func (o *PublicFormViewCoverImage) HasMimeType() bool {
	if o != nil && !IsNil(o.MimeType) {
		return true
	}

	return false
}

// SetMimeType gets a reference to the given string and assigns it to the MimeType field.
func (o *PublicFormViewCoverImage) SetMimeType(v string) {
	o.MimeType = &v
}

// GetIsImage returns the IsImage field value if set, zero value otherwise.
func (o *PublicFormViewCoverImage) GetIsImage() bool {
	if o == nil || IsNil(o.IsImage) {
		var ret bool
		return ret
	}
	return *o.IsImage
}

// GetIsImageOk returns a tuple with the IsImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicFormViewCoverImage) GetIsImageOk() (*bool, bool) {
	if o == nil || IsNil(o.IsImage) {
		return nil, false
	}
	return o.IsImage, true
}

// HasIsImage returns a boolean if a field has been set.
func (o *PublicFormViewCoverImage) HasIsImage() bool {
	if o != nil && !IsNil(o.IsImage) {
		return true
	}

	return false
}

// SetIsImage gets a reference to the given bool and assigns it to the IsImage field.
func (o *PublicFormViewCoverImage) SetIsImage(v bool) {
	o.IsImage = &v
}

// GetImageWidth returns the ImageWidth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PublicFormViewCoverImage) GetImageWidth() int32 {
	if o == nil || IsNil(o.ImageWidth.Get()) {
		var ret int32
		return ret
	}
	return *o.ImageWidth.Get()
}

// GetImageWidthOk returns a tuple with the ImageWidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PublicFormViewCoverImage) GetImageWidthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageWidth.Get(), o.ImageWidth.IsSet()
}

// HasImageWidth returns a boolean if a field has been set.
func (o *PublicFormViewCoverImage) HasImageWidth() bool {
	if o != nil && o.ImageWidth.IsSet() {
		return true
	}

	return false
}

// SetImageWidth gets a reference to the given NullableInt32 and assigns it to the ImageWidth field.
func (o *PublicFormViewCoverImage) SetImageWidth(v int32) {
	o.ImageWidth.Set(&v)
}
// SetImageWidthNil sets the value for ImageWidth to be an explicit nil
func (o *PublicFormViewCoverImage) SetImageWidthNil() {
	o.ImageWidth.Set(nil)
}

// UnsetImageWidth ensures that no value is present for ImageWidth, not even an explicit nil
func (o *PublicFormViewCoverImage) UnsetImageWidth() {
	o.ImageWidth.Unset()
}

// GetImageHeight returns the ImageHeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PublicFormViewCoverImage) GetImageHeight() int32 {
	if o == nil || IsNil(o.ImageHeight.Get()) {
		var ret int32
		return ret
	}
	return *o.ImageHeight.Get()
}

// GetImageHeightOk returns a tuple with the ImageHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PublicFormViewCoverImage) GetImageHeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageHeight.Get(), o.ImageHeight.IsSet()
}

// HasImageHeight returns a boolean if a field has been set.
func (o *PublicFormViewCoverImage) HasImageHeight() bool {
	if o != nil && o.ImageHeight.IsSet() {
		return true
	}

	return false
}

// SetImageHeight gets a reference to the given NullableInt32 and assigns it to the ImageHeight field.
func (o *PublicFormViewCoverImage) SetImageHeight(v int32) {
	o.ImageHeight.Set(&v)
}
// SetImageHeightNil sets the value for ImageHeight to be an explicit nil
func (o *PublicFormViewCoverImage) SetImageHeightNil() {
	o.ImageHeight.Set(nil)
}

// UnsetImageHeight ensures that no value is present for ImageHeight, not even an explicit nil
func (o *PublicFormViewCoverImage) UnsetImageHeight() {
	o.ImageHeight.Unset()
}

// GetUploadedAt returns the UploadedAt field value
func (o *PublicFormViewCoverImage) GetUploadedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UploadedAt
}

// GetUploadedAtOk returns a tuple with the UploadedAt field value
// and a boolean to check if the value has been set.
func (o *PublicFormViewCoverImage) GetUploadedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UploadedAt, true
}

// SetUploadedAt sets field value
func (o *PublicFormViewCoverImage) SetUploadedAt(v time.Time) {
	o.UploadedAt = v
}

// GetUrl returns the Url field value
func (o *PublicFormViewCoverImage) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *PublicFormViewCoverImage) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *PublicFormViewCoverImage) SetUrl(v string) {
	o.Url = v
}

// GetThumbnails returns the Thumbnails field value
func (o *PublicFormViewCoverImage) GetThumbnails() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Thumbnails
}

// GetThumbnailsOk returns a tuple with the Thumbnails field value
// and a boolean to check if the value has been set.
func (o *PublicFormViewCoverImage) GetThumbnailsOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Thumbnails, true
}

// SetThumbnails sets field value
func (o *PublicFormViewCoverImage) SetThumbnails(v map[string]interface{}) {
	o.Thumbnails = v
}

// GetName returns the Name field value
func (o *PublicFormViewCoverImage) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PublicFormViewCoverImage) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PublicFormViewCoverImage) SetName(v string) {
	o.Name = v
}

// GetOriginalName returns the OriginalName field value
func (o *PublicFormViewCoverImage) GetOriginalName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OriginalName
}

// GetOriginalNameOk returns a tuple with the OriginalName field value
// and a boolean to check if the value has been set.
func (o *PublicFormViewCoverImage) GetOriginalNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OriginalName, true
}

// SetOriginalName sets field value
func (o *PublicFormViewCoverImage) SetOriginalName(v string) {
	o.OriginalName = v
}

func (o PublicFormViewCoverImage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicFormViewCoverImage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["size"] = o.Size
	if !IsNil(o.MimeType) {
		toSerialize["mime_type"] = o.MimeType
	}
	if !IsNil(o.IsImage) {
		toSerialize["is_image"] = o.IsImage
	}
	if o.ImageWidth.IsSet() {
		toSerialize["image_width"] = o.ImageWidth.Get()
	}
	if o.ImageHeight.IsSet() {
		toSerialize["image_height"] = o.ImageHeight.Get()
	}
	// skip: uploaded_at is readOnly
	// skip: url is readOnly
	// skip: thumbnails is readOnly
	// skip: name is readOnly
	toSerialize["original_name"] = o.OriginalName
	return toSerialize, nil
}

type NullablePublicFormViewCoverImage struct {
	value *PublicFormViewCoverImage
	isSet bool
}

func (v NullablePublicFormViewCoverImage) Get() *PublicFormViewCoverImage {
	return v.value
}

func (v *NullablePublicFormViewCoverImage) Set(val *PublicFormViewCoverImage) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicFormViewCoverImage) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicFormViewCoverImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicFormViewCoverImage(val *PublicFormViewCoverImage) *NullablePublicFormViewCoverImage {
	return &NullablePublicFormViewCoverImage{value: val, isSet: true}
}

func (v NullablePublicFormViewCoverImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicFormViewCoverImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


