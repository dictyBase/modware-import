/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the TableWebhookCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TableWebhookCreateRequest{}

// TableWebhookCreateRequest struct for TableWebhookCreateRequest
type TableWebhookCreateRequest struct {
	// The URL that must be called when the webhook is triggered.
	Url string `json:"url"`
	// Indicates whether this webhook should listen to all events.
	IncludeAllEvents *bool `json:"include_all_events,omitempty"`
	// A list containing the events that will trigger this webhook.
	Events []Events3eaEnum `json:"events,omitempty"`
	RequestMethod *RequestMethodEnum `json:"request_method,omitempty"`
	// The additional headers as an object where the key is the name and the value the value.
	Headers map[string]interface{} `json:"headers,omitempty"`
	// An internal name of the webhook.
	Name string `json:"name"`
	// Indicates whether the field names must be used as payload key instead of the id.
	UseUserFieldNames *bool `json:"use_user_field_names,omitempty"`
}

// NewTableWebhookCreateRequest instantiates a new TableWebhookCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTableWebhookCreateRequest(url string, name string) *TableWebhookCreateRequest {
	this := TableWebhookCreateRequest{}
	this.Url = url
	this.Name = name
	return &this
}

// NewTableWebhookCreateRequestWithDefaults instantiates a new TableWebhookCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTableWebhookCreateRequestWithDefaults() *TableWebhookCreateRequest {
	this := TableWebhookCreateRequest{}
	return &this
}

// GetUrl returns the Url field value
func (o *TableWebhookCreateRequest) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *TableWebhookCreateRequest) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *TableWebhookCreateRequest) SetUrl(v string) {
	o.Url = v
}

// GetIncludeAllEvents returns the IncludeAllEvents field value if set, zero value otherwise.
func (o *TableWebhookCreateRequest) GetIncludeAllEvents() bool {
	if o == nil || IsNil(o.IncludeAllEvents) {
		var ret bool
		return ret
	}
	return *o.IncludeAllEvents
}

// GetIncludeAllEventsOk returns a tuple with the IncludeAllEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableWebhookCreateRequest) GetIncludeAllEventsOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeAllEvents) {
		return nil, false
	}
	return o.IncludeAllEvents, true
}

// HasIncludeAllEvents returns a boolean if a field has been set.
func (o *TableWebhookCreateRequest) HasIncludeAllEvents() bool {
	if o != nil && !IsNil(o.IncludeAllEvents) {
		return true
	}

	return false
}

// SetIncludeAllEvents gets a reference to the given bool and assigns it to the IncludeAllEvents field.
func (o *TableWebhookCreateRequest) SetIncludeAllEvents(v bool) {
	o.IncludeAllEvents = &v
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *TableWebhookCreateRequest) GetEvents() []Events3eaEnum {
	if o == nil || IsNil(o.Events) {
		var ret []Events3eaEnum
		return ret
	}
	return o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableWebhookCreateRequest) GetEventsOk() ([]Events3eaEnum, bool) {
	if o == nil || IsNil(o.Events) {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *TableWebhookCreateRequest) HasEvents() bool {
	if o != nil && !IsNil(o.Events) {
		return true
	}

	return false
}

// SetEvents gets a reference to the given []Events3eaEnum and assigns it to the Events field.
func (o *TableWebhookCreateRequest) SetEvents(v []Events3eaEnum) {
	o.Events = v
}

// GetRequestMethod returns the RequestMethod field value if set, zero value otherwise.
func (o *TableWebhookCreateRequest) GetRequestMethod() RequestMethodEnum {
	if o == nil || IsNil(o.RequestMethod) {
		var ret RequestMethodEnum
		return ret
	}
	return *o.RequestMethod
}

// GetRequestMethodOk returns a tuple with the RequestMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableWebhookCreateRequest) GetRequestMethodOk() (*RequestMethodEnum, bool) {
	if o == nil || IsNil(o.RequestMethod) {
		return nil, false
	}
	return o.RequestMethod, true
}

// HasRequestMethod returns a boolean if a field has been set.
func (o *TableWebhookCreateRequest) HasRequestMethod() bool {
	if o != nil && !IsNil(o.RequestMethod) {
		return true
	}

	return false
}

// SetRequestMethod gets a reference to the given RequestMethodEnum and assigns it to the RequestMethod field.
func (o *TableWebhookCreateRequest) SetRequestMethod(v RequestMethodEnum) {
	o.RequestMethod = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *TableWebhookCreateRequest) GetHeaders() map[string]interface{} {
	if o == nil || IsNil(o.Headers) {
		var ret map[string]interface{}
		return ret
	}
	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableWebhookCreateRequest) GetHeadersOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Headers) {
		return map[string]interface{}{}, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *TableWebhookCreateRequest) HasHeaders() bool {
	if o != nil && !IsNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given map[string]interface{} and assigns it to the Headers field.
func (o *TableWebhookCreateRequest) SetHeaders(v map[string]interface{}) {
	o.Headers = v
}

// GetName returns the Name field value
func (o *TableWebhookCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TableWebhookCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TableWebhookCreateRequest) SetName(v string) {
	o.Name = v
}

// GetUseUserFieldNames returns the UseUserFieldNames field value if set, zero value otherwise.
func (o *TableWebhookCreateRequest) GetUseUserFieldNames() bool {
	if o == nil || IsNil(o.UseUserFieldNames) {
		var ret bool
		return ret
	}
	return *o.UseUserFieldNames
}

// GetUseUserFieldNamesOk returns a tuple with the UseUserFieldNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableWebhookCreateRequest) GetUseUserFieldNamesOk() (*bool, bool) {
	if o == nil || IsNil(o.UseUserFieldNames) {
		return nil, false
	}
	return o.UseUserFieldNames, true
}

// HasUseUserFieldNames returns a boolean if a field has been set.
func (o *TableWebhookCreateRequest) HasUseUserFieldNames() bool {
	if o != nil && !IsNil(o.UseUserFieldNames) {
		return true
	}

	return false
}

// SetUseUserFieldNames gets a reference to the given bool and assigns it to the UseUserFieldNames field.
func (o *TableWebhookCreateRequest) SetUseUserFieldNames(v bool) {
	o.UseUserFieldNames = &v
}

func (o TableWebhookCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TableWebhookCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	if !IsNil(o.IncludeAllEvents) {
		toSerialize["include_all_events"] = o.IncludeAllEvents
	}
	if !IsNil(o.Events) {
		toSerialize["events"] = o.Events
	}
	if !IsNil(o.RequestMethod) {
		toSerialize["request_method"] = o.RequestMethod
	}
	if !IsNil(o.Headers) {
		toSerialize["headers"] = o.Headers
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.UseUserFieldNames) {
		toSerialize["use_user_field_names"] = o.UseUserFieldNames
	}
	return toSerialize, nil
}

type NullableTableWebhookCreateRequest struct {
	value *TableWebhookCreateRequest
	isSet bool
}

func (v NullableTableWebhookCreateRequest) Get() *TableWebhookCreateRequest {
	return v.value
}

func (v *NullableTableWebhookCreateRequest) Set(val *TableWebhookCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTableWebhookCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTableWebhookCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTableWebhookCreateRequest(val *TableWebhookCreateRequest) *NullableTableWebhookCreateRequest {
	return &NullableTableWebhookCreateRequest{value: val, isSet: true}
}

func (v NullableTableWebhookCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTableWebhookCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


