/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the OrderApplications type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderApplications{}

// OrderApplications struct for OrderApplications
type OrderApplications struct {
	// Application ids in the desired order.
	ApplicationIds []int32 `json:"application_ids"`
}

// NewOrderApplications instantiates a new OrderApplications object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderApplications(applicationIds []int32) *OrderApplications {
	this := OrderApplications{}
	this.ApplicationIds = applicationIds
	return &this
}

// NewOrderApplicationsWithDefaults instantiates a new OrderApplications object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderApplicationsWithDefaults() *OrderApplications {
	this := OrderApplications{}
	return &this
}

// GetApplicationIds returns the ApplicationIds field value
func (o *OrderApplications) GetApplicationIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.ApplicationIds
}

// GetApplicationIdsOk returns a tuple with the ApplicationIds field value
// and a boolean to check if the value has been set.
func (o *OrderApplications) GetApplicationIdsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApplicationIds, true
}

// SetApplicationIds sets field value
func (o *OrderApplications) SetApplicationIds(v []int32) {
	o.ApplicationIds = v
}

func (o OrderApplications) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderApplications) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["application_ids"] = o.ApplicationIds
	return toSerialize, nil
}

type NullableOrderApplications struct {
	value *OrderApplications
	isSet bool
}

func (v NullableOrderApplications) Get() *OrderApplications {
	return v.value
}

func (v *NullableOrderApplications) Set(val *OrderApplications) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderApplications) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderApplications) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderApplications(val *OrderApplications) *NullableOrderApplications {
	return &NullableOrderApplications{value: val, isSet: true}
}

func (v NullableOrderApplications) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderApplications) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


