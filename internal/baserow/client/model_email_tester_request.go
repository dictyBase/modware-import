/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the EmailTesterRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmailTesterRequest{}

// EmailTesterRequest struct for EmailTesterRequest
type EmailTesterRequest struct {
	TargetEmail string `json:"target_email"`
}

// NewEmailTesterRequest instantiates a new EmailTesterRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailTesterRequest(targetEmail string) *EmailTesterRequest {
	this := EmailTesterRequest{}
	this.TargetEmail = targetEmail
	return &this
}

// NewEmailTesterRequestWithDefaults instantiates a new EmailTesterRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailTesterRequestWithDefaults() *EmailTesterRequest {
	this := EmailTesterRequest{}
	return &this
}

// GetTargetEmail returns the TargetEmail field value
func (o *EmailTesterRequest) GetTargetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetEmail
}

// GetTargetEmailOk returns a tuple with the TargetEmail field value
// and a boolean to check if the value has been set.
func (o *EmailTesterRequest) GetTargetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetEmail, true
}

// SetTargetEmail sets field value
func (o *EmailTesterRequest) SetTargetEmail(v string) {
	o.TargetEmail = v
}

func (o EmailTesterRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmailTesterRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["target_email"] = o.TargetEmail
	return toSerialize, nil
}

type NullableEmailTesterRequest struct {
	value *EmailTesterRequest
	isSet bool
}

func (v NullableEmailTesterRequest) Get() *EmailTesterRequest {
	return v.value
}

func (v *NullableEmailTesterRequest) Set(val *EmailTesterRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailTesterRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailTesterRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailTesterRequest(val *EmailTesterRequest) *NullableEmailTesterRequest {
	return &NullableEmailTesterRequest{value: val, isSet: true}
}

func (v NullableEmailTesterRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailTesterRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


