/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the FullHealthCheck type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FullHealthCheck{}

// FullHealthCheck struct for FullHealthCheck
type FullHealthCheck struct {
	// False if any of the critical service health checks are failing, true otherwise.
	Passing bool `json:"passing"`
	// An object keyed by the name of the health check and the value being the result.
	Checks map[string]string `json:"checks"`
}

// NewFullHealthCheck instantiates a new FullHealthCheck object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFullHealthCheck(passing bool, checks map[string]string) *FullHealthCheck {
	this := FullHealthCheck{}
	this.Passing = passing
	this.Checks = checks
	return &this
}

// NewFullHealthCheckWithDefaults instantiates a new FullHealthCheck object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFullHealthCheckWithDefaults() *FullHealthCheck {
	this := FullHealthCheck{}
	return &this
}

// GetPassing returns the Passing field value
func (o *FullHealthCheck) GetPassing() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Passing
}

// GetPassingOk returns a tuple with the Passing field value
// and a boolean to check if the value has been set.
func (o *FullHealthCheck) GetPassingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Passing, true
}

// SetPassing sets field value
func (o *FullHealthCheck) SetPassing(v bool) {
	o.Passing = v
}

// GetChecks returns the Checks field value
func (o *FullHealthCheck) GetChecks() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.Checks
}

// GetChecksOk returns a tuple with the Checks field value
// and a boolean to check if the value has been set.
func (o *FullHealthCheck) GetChecksOk() (*map[string]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Checks, true
}

// SetChecks sets field value
func (o *FullHealthCheck) SetChecks(v map[string]string) {
	o.Checks = v
}

func (o FullHealthCheck) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FullHealthCheck) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: passing is readOnly
	// skip: checks is readOnly
	return toSerialize, nil
}

type NullableFullHealthCheck struct {
	value *FullHealthCheck
	isSet bool
}

func (v NullableFullHealthCheck) Get() *FullHealthCheck {
	return v.value
}

func (v *NullableFullHealthCheck) Set(val *FullHealthCheck) {
	v.value = val
	v.isSet = true
}

func (v NullableFullHealthCheck) IsSet() bool {
	return v.isSet
}

func (v *NullableFullHealthCheck) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFullHealthCheck(val *FullHealthCheck) *NullableFullHealthCheck {
	return &NullableFullHealthCheck{value: val, isSet: true}
}

func (v NullableFullHealthCheck) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFullHealthCheck) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


