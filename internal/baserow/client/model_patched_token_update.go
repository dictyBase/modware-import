/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the PatchedTokenUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedTokenUpdate{}

// PatchedTokenUpdate struct for PatchedTokenUpdate
type PatchedTokenUpdate struct {
	// The human readable name of the database token for the user.
	Name *string `json:"name,omitempty"`
	Permissions *PatchedTokenUpdatePermissions `json:"permissions,omitempty"`
	// Indicates if a new key must be generated.
	RotateKey *bool `json:"rotate_key,omitempty"`
}

// NewPatchedTokenUpdate instantiates a new PatchedTokenUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedTokenUpdate() *PatchedTokenUpdate {
	this := PatchedTokenUpdate{}
	var rotateKey bool = false
	this.RotateKey = &rotateKey
	return &this
}

// NewPatchedTokenUpdateWithDefaults instantiates a new PatchedTokenUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedTokenUpdateWithDefaults() *PatchedTokenUpdate {
	this := PatchedTokenUpdate{}
	var rotateKey bool = false
	this.RotateKey = &rotateKey
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchedTokenUpdate) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedTokenUpdate) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchedTokenUpdate) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchedTokenUpdate) SetName(v string) {
	o.Name = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *PatchedTokenUpdate) GetPermissions() PatchedTokenUpdatePermissions {
	if o == nil || IsNil(o.Permissions) {
		var ret PatchedTokenUpdatePermissions
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedTokenUpdate) GetPermissionsOk() (*PatchedTokenUpdatePermissions, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *PatchedTokenUpdate) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given PatchedTokenUpdatePermissions and assigns it to the Permissions field.
func (o *PatchedTokenUpdate) SetPermissions(v PatchedTokenUpdatePermissions) {
	o.Permissions = &v
}

// GetRotateKey returns the RotateKey field value if set, zero value otherwise.
func (o *PatchedTokenUpdate) GetRotateKey() bool {
	if o == nil || IsNil(o.RotateKey) {
		var ret bool
		return ret
	}
	return *o.RotateKey
}

// GetRotateKeyOk returns a tuple with the RotateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedTokenUpdate) GetRotateKeyOk() (*bool, bool) {
	if o == nil || IsNil(o.RotateKey) {
		return nil, false
	}
	return o.RotateKey, true
}

// HasRotateKey returns a boolean if a field has been set.
func (o *PatchedTokenUpdate) HasRotateKey() bool {
	if o != nil && !IsNil(o.RotateKey) {
		return true
	}

	return false
}

// SetRotateKey gets a reference to the given bool and assigns it to the RotateKey field.
func (o *PatchedTokenUpdate) SetRotateKey(v bool) {
	o.RotateKey = &v
}

func (o PatchedTokenUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedTokenUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.RotateKey) {
		toSerialize["rotate_key"] = o.RotateKey
	}
	return toSerialize, nil
}

type NullablePatchedTokenUpdate struct {
	value *PatchedTokenUpdate
	isSet bool
}

func (v NullablePatchedTokenUpdate) Get() *PatchedTokenUpdate {
	return v.value
}

func (v *NullablePatchedTokenUpdate) Set(val *PatchedTokenUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedTokenUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedTokenUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedTokenUpdate(val *PatchedTokenUpdate) *NullablePatchedTokenUpdate {
	return &NullablePatchedTokenUpdate{value: val, isSet: true}
}

func (v NullablePatchedTokenUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedTokenUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


