/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// checks if the Snapshot type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Snapshot{}

// Snapshot struct for Snapshot
type Snapshot struct {
	Id int32 `json:"id"`
	Name string `json:"name"`
	SnapshotFromApplication int32 `json:"snapshot_from_application"`
	CreatedBy User `json:"created_by"`
	CreatedAt time.Time `json:"created_at"`
}

// NewSnapshot instantiates a new Snapshot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshot(id int32, name string, snapshotFromApplication int32, createdBy User, createdAt time.Time) *Snapshot {
	this := Snapshot{}
	this.Id = id
	this.Name = name
	this.SnapshotFromApplication = snapshotFromApplication
	this.CreatedBy = createdBy
	this.CreatedAt = createdAt
	return &this
}

// NewSnapshotWithDefaults instantiates a new Snapshot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotWithDefaults() *Snapshot {
	this := Snapshot{}
	return &this
}

// GetId returns the Id field value
func (o *Snapshot) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Snapshot) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Snapshot) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *Snapshot) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Snapshot) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Snapshot) SetName(v string) {
	o.Name = v
}

// GetSnapshotFromApplication returns the SnapshotFromApplication field value
func (o *Snapshot) GetSnapshotFromApplication() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SnapshotFromApplication
}

// GetSnapshotFromApplicationOk returns a tuple with the SnapshotFromApplication field value
// and a boolean to check if the value has been set.
func (o *Snapshot) GetSnapshotFromApplicationOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SnapshotFromApplication, true
}

// SetSnapshotFromApplication sets field value
func (o *Snapshot) SetSnapshotFromApplication(v int32) {
	o.SnapshotFromApplication = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *Snapshot) GetCreatedBy() User {
	if o == nil {
		var ret User
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *Snapshot) GetCreatedByOk() (*User, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *Snapshot) SetCreatedBy(v User) {
	o.CreatedBy = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Snapshot) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Snapshot) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Snapshot) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o Snapshot) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Snapshot) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: id is readOnly
	toSerialize["name"] = o.Name
	// skip: snapshot_from_application is readOnly
	// skip: created_by is readOnly
	// skip: created_at is readOnly
	return toSerialize, nil
}

type NullableSnapshot struct {
	value *Snapshot
	isSet bool
}

func (v NullableSnapshot) Get() *Snapshot {
	return v.value
}

func (v *NullableSnapshot) Set(val *Snapshot) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshot) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshot(val *Snapshot) *NullableSnapshot {
	return &NullableSnapshot{value: val, isSet: true}
}

func (v NullableSnapshot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


