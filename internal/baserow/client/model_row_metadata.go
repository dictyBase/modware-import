/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the RowMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RowMetadata{}

// RowMetadata struct for RowMetadata
type RowMetadata struct {
	// How many row comments exist for this row.
	RowCommentCount *int32 `json:"row_comment_count,omitempty"`
}

// NewRowMetadata instantiates a new RowMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRowMetadata() *RowMetadata {
	this := RowMetadata{}
	return &this
}

// NewRowMetadataWithDefaults instantiates a new RowMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRowMetadataWithDefaults() *RowMetadata {
	this := RowMetadata{}
	return &this
}

// GetRowCommentCount returns the RowCommentCount field value if set, zero value otherwise.
func (o *RowMetadata) GetRowCommentCount() int32 {
	if o == nil || IsNil(o.RowCommentCount) {
		var ret int32
		return ret
	}
	return *o.RowCommentCount
}

// GetRowCommentCountOk returns a tuple with the RowCommentCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RowMetadata) GetRowCommentCountOk() (*int32, bool) {
	if o == nil || IsNil(o.RowCommentCount) {
		return nil, false
	}
	return o.RowCommentCount, true
}

// HasRowCommentCount returns a boolean if a field has been set.
func (o *RowMetadata) HasRowCommentCount() bool {
	if o != nil && !IsNil(o.RowCommentCount) {
		return true
	}

	return false
}

// SetRowCommentCount gets a reference to the given int32 and assigns it to the RowCommentCount field.
func (o *RowMetadata) SetRowCommentCount(v int32) {
	o.RowCommentCount = &v
}

func (o RowMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RowMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RowCommentCount) {
		toSerialize["row_comment_count"] = o.RowCommentCount
	}
	return toSerialize, nil
}

type NullableRowMetadata struct {
	value *RowMetadata
	isSet bool
}

func (v NullableRowMetadata) Get() *RowMetadata {
	return v.value
}

func (v *NullableRowMetadata) Set(val *RowMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableRowMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableRowMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRowMetadata(val *RowMetadata) *NullableRowMetadata {
	return &NullableRowMetadata{value: val, isSet: true}
}

func (v NullableRowMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRowMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


