/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// checks if the UserWorkspaceInvitation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserWorkspaceInvitation{}

// UserWorkspaceInvitation This serializer is used for displaying the invitation to the user that doesn't have access to the workspace yet, so not for invitation management purposes.
type UserWorkspaceInvitation struct {
	Id int32 `json:"id"`
	InvitedBy string `json:"invited_by"`
	Group string `json:"group"`
	Workspace string `json:"workspace"`
	// The email address of the user that the invitation is meant for. Only a user with that email address can accept it.
	Email string `json:"email"`
	// An optional message that the invitor can provide. This will be visible to the receiver of the invitation.
	Message string `json:"message"`
	CreatedOn time.Time `json:"created_on"`
	EmailExists bool `json:"email_exists"`
}

// NewUserWorkspaceInvitation instantiates a new UserWorkspaceInvitation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserWorkspaceInvitation(id int32, invitedBy string, group string, workspace string, email string, message string, createdOn time.Time, emailExists bool) *UserWorkspaceInvitation {
	this := UserWorkspaceInvitation{}
	this.Id = id
	this.InvitedBy = invitedBy
	this.Group = group
	this.Workspace = workspace
	this.Email = email
	this.Message = message
	this.CreatedOn = createdOn
	this.EmailExists = emailExists
	return &this
}

// NewUserWorkspaceInvitationWithDefaults instantiates a new UserWorkspaceInvitation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserWorkspaceInvitationWithDefaults() *UserWorkspaceInvitation {
	this := UserWorkspaceInvitation{}
	return &this
}

// GetId returns the Id field value
func (o *UserWorkspaceInvitation) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UserWorkspaceInvitation) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UserWorkspaceInvitation) SetId(v int32) {
	o.Id = v
}

// GetInvitedBy returns the InvitedBy field value
func (o *UserWorkspaceInvitation) GetInvitedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InvitedBy
}

// GetInvitedByOk returns a tuple with the InvitedBy field value
// and a boolean to check if the value has been set.
func (o *UserWorkspaceInvitation) GetInvitedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvitedBy, true
}

// SetInvitedBy sets field value
func (o *UserWorkspaceInvitation) SetInvitedBy(v string) {
	o.InvitedBy = v
}

// GetGroup returns the Group field value
func (o *UserWorkspaceInvitation) GetGroup() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Group
}

// GetGroupOk returns a tuple with the Group field value
// and a boolean to check if the value has been set.
func (o *UserWorkspaceInvitation) GetGroupOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Group, true
}

// SetGroup sets field value
func (o *UserWorkspaceInvitation) SetGroup(v string) {
	o.Group = v
}

// GetWorkspace returns the Workspace field value
func (o *UserWorkspaceInvitation) GetWorkspace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Workspace
}

// GetWorkspaceOk returns a tuple with the Workspace field value
// and a boolean to check if the value has been set.
func (o *UserWorkspaceInvitation) GetWorkspaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Workspace, true
}

// SetWorkspace sets field value
func (o *UserWorkspaceInvitation) SetWorkspace(v string) {
	o.Workspace = v
}

// GetEmail returns the Email field value
func (o *UserWorkspaceInvitation) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *UserWorkspaceInvitation) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *UserWorkspaceInvitation) SetEmail(v string) {
	o.Email = v
}

// GetMessage returns the Message field value
func (o *UserWorkspaceInvitation) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *UserWorkspaceInvitation) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *UserWorkspaceInvitation) SetMessage(v string) {
	o.Message = v
}

// GetCreatedOn returns the CreatedOn field value
func (o *UserWorkspaceInvitation) GetCreatedOn() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value
// and a boolean to check if the value has been set.
func (o *UserWorkspaceInvitation) GetCreatedOnOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedOn, true
}

// SetCreatedOn sets field value
func (o *UserWorkspaceInvitation) SetCreatedOn(v time.Time) {
	o.CreatedOn = v
}

// GetEmailExists returns the EmailExists field value
func (o *UserWorkspaceInvitation) GetEmailExists() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EmailExists
}

// GetEmailExistsOk returns a tuple with the EmailExists field value
// and a boolean to check if the value has been set.
func (o *UserWorkspaceInvitation) GetEmailExistsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmailExists, true
}

// SetEmailExists sets field value
func (o *UserWorkspaceInvitation) SetEmailExists(v bool) {
	o.EmailExists = v
}

func (o UserWorkspaceInvitation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserWorkspaceInvitation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: id is readOnly
	// skip: invited_by is readOnly
	// skip: group is readOnly
	// skip: workspace is readOnly
	toSerialize["email"] = o.Email
	// skip: message is readOnly
	// skip: created_on is readOnly
	// skip: email_exists is readOnly
	return toSerialize, nil
}

type NullableUserWorkspaceInvitation struct {
	value *UserWorkspaceInvitation
	isSet bool
}

func (v NullableUserWorkspaceInvitation) Get() *UserWorkspaceInvitation {
	return v.value
}

func (v *NullableUserWorkspaceInvitation) Set(val *UserWorkspaceInvitation) {
	v.value = val
	v.isSet = true
}

func (v NullableUserWorkspaceInvitation) IsSet() bool {
	return v.isSet
}

func (v *NullableUserWorkspaceInvitation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserWorkspaceInvitation(val *UserWorkspaceInvitation) *NullableUserWorkspaceInvitation {
	return &NullableUserWorkspaceInvitation{value: val, isSet: true}
}

func (v NullableUserWorkspaceInvitation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserWorkspaceInvitation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


