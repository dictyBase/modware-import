/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the SingleInstallTemplateJobType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SingleInstallTemplateJobType{}

// SingleInstallTemplateJobType struct for SingleInstallTemplateJobType
type SingleInstallTemplateJobType struct {
	Id int32 `json:"id"`
	// The type of the job.
	Type string `json:"type"`
	// A percentage indicating how far along the job is. 100 means that it's finished.
	ProgressPercentage int32 `json:"progress_percentage"`
	// Indicates the state of the import job.
	State string `json:"state"`
	// A human readable error message indicating what went wrong.
	HumanReadableError *string `json:"human_readable_error,omitempty"`
	Workspace Workspace `json:"workspace"`
	Template Template `json:"template"`
	InstalledApplications map[string]interface{} `json:"installed_applications"`
	Group Workspace `json:"group"`
}

// NewSingleInstallTemplateJobType instantiates a new SingleInstallTemplateJobType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSingleInstallTemplateJobType(id int32, type_ string, progressPercentage int32, state string, workspace Workspace, template Template, installedApplications map[string]interface{}, group Workspace) *SingleInstallTemplateJobType {
	this := SingleInstallTemplateJobType{}
	this.Id = id
	this.Type = type_
	this.ProgressPercentage = progressPercentage
	this.State = state
	this.Workspace = workspace
	this.Template = template
	this.InstalledApplications = installedApplications
	this.Group = group
	return &this
}

// NewSingleInstallTemplateJobTypeWithDefaults instantiates a new SingleInstallTemplateJobType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSingleInstallTemplateJobTypeWithDefaults() *SingleInstallTemplateJobType {
	this := SingleInstallTemplateJobType{}
	return &this
}

// GetId returns the Id field value
func (o *SingleInstallTemplateJobType) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SingleInstallTemplateJobType) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SingleInstallTemplateJobType) SetId(v int32) {
	o.Id = v
}

// GetType returns the Type field value
func (o *SingleInstallTemplateJobType) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SingleInstallTemplateJobType) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SingleInstallTemplateJobType) SetType(v string) {
	o.Type = v
}

// GetProgressPercentage returns the ProgressPercentage field value
func (o *SingleInstallTemplateJobType) GetProgressPercentage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProgressPercentage
}

// GetProgressPercentageOk returns a tuple with the ProgressPercentage field value
// and a boolean to check if the value has been set.
func (o *SingleInstallTemplateJobType) GetProgressPercentageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProgressPercentage, true
}

// SetProgressPercentage sets field value
func (o *SingleInstallTemplateJobType) SetProgressPercentage(v int32) {
	o.ProgressPercentage = v
}

// GetState returns the State field value
func (o *SingleInstallTemplateJobType) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *SingleInstallTemplateJobType) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *SingleInstallTemplateJobType) SetState(v string) {
	o.State = v
}

// GetHumanReadableError returns the HumanReadableError field value if set, zero value otherwise.
func (o *SingleInstallTemplateJobType) GetHumanReadableError() string {
	if o == nil || IsNil(o.HumanReadableError) {
		var ret string
		return ret
	}
	return *o.HumanReadableError
}

// GetHumanReadableErrorOk returns a tuple with the HumanReadableError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SingleInstallTemplateJobType) GetHumanReadableErrorOk() (*string, bool) {
	if o == nil || IsNil(o.HumanReadableError) {
		return nil, false
	}
	return o.HumanReadableError, true
}

// HasHumanReadableError returns a boolean if a field has been set.
func (o *SingleInstallTemplateJobType) HasHumanReadableError() bool {
	if o != nil && !IsNil(o.HumanReadableError) {
		return true
	}

	return false
}

// SetHumanReadableError gets a reference to the given string and assigns it to the HumanReadableError field.
func (o *SingleInstallTemplateJobType) SetHumanReadableError(v string) {
	o.HumanReadableError = &v
}

// GetWorkspace returns the Workspace field value
func (o *SingleInstallTemplateJobType) GetWorkspace() Workspace {
	if o == nil {
		var ret Workspace
		return ret
	}

	return o.Workspace
}

// GetWorkspaceOk returns a tuple with the Workspace field value
// and a boolean to check if the value has been set.
func (o *SingleInstallTemplateJobType) GetWorkspaceOk() (*Workspace, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Workspace, true
}

// SetWorkspace sets field value
func (o *SingleInstallTemplateJobType) SetWorkspace(v Workspace) {
	o.Workspace = v
}

// GetTemplate returns the Template field value
func (o *SingleInstallTemplateJobType) GetTemplate() Template {
	if o == nil {
		var ret Template
		return ret
	}

	return o.Template
}

// GetTemplateOk returns a tuple with the Template field value
// and a boolean to check if the value has been set.
func (o *SingleInstallTemplateJobType) GetTemplateOk() (*Template, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Template, true
}

// SetTemplate sets field value
func (o *SingleInstallTemplateJobType) SetTemplate(v Template) {
	o.Template = v
}

// GetInstalledApplications returns the InstalledApplications field value
func (o *SingleInstallTemplateJobType) GetInstalledApplications() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.InstalledApplications
}

// GetInstalledApplicationsOk returns a tuple with the InstalledApplications field value
// and a boolean to check if the value has been set.
func (o *SingleInstallTemplateJobType) GetInstalledApplicationsOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.InstalledApplications, true
}

// SetInstalledApplications sets field value
func (o *SingleInstallTemplateJobType) SetInstalledApplications(v map[string]interface{}) {
	o.InstalledApplications = v
}

// GetGroup returns the Group field value
func (o *SingleInstallTemplateJobType) GetGroup() Workspace {
	if o == nil {
		var ret Workspace
		return ret
	}

	return o.Group
}

// GetGroupOk returns a tuple with the Group field value
// and a boolean to check if the value has been set.
func (o *SingleInstallTemplateJobType) GetGroupOk() (*Workspace, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Group, true
}

// SetGroup sets field value
func (o *SingleInstallTemplateJobType) SetGroup(v Workspace) {
	o.Group = v
}

func (o SingleInstallTemplateJobType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SingleInstallTemplateJobType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: id is readOnly
	// skip: type is readOnly
	toSerialize["progress_percentage"] = o.ProgressPercentage
	toSerialize["state"] = o.State
	if !IsNil(o.HumanReadableError) {
		toSerialize["human_readable_error"] = o.HumanReadableError
	}
	// skip: workspace is readOnly
	// skip: template is readOnly
	// skip: installed_applications is readOnly
	// skip: group is readOnly
	return toSerialize, nil
}

type NullableSingleInstallTemplateJobType struct {
	value *SingleInstallTemplateJobType
	isSet bool
}

func (v NullableSingleInstallTemplateJobType) Get() *SingleInstallTemplateJobType {
	return v.value
}

func (v *NullableSingleInstallTemplateJobType) Set(val *SingleInstallTemplateJobType) {
	v.value = val
	v.isSet = true
}

func (v NullableSingleInstallTemplateJobType) IsSet() bool {
	return v.isSet
}

func (v *NullableSingleInstallTemplateJobType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSingleInstallTemplateJobType(val *SingleInstallTemplateJobType) *NullableSingleInstallTemplateJobType {
	return &NullableSingleInstallTemplateJobType{value: val, isSet: true}
}

func (v NullableSingleInstallTemplateJobType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSingleInstallTemplateJobType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


