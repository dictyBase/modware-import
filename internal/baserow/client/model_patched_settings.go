/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the PatchedSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedSettings{}

// PatchedSettings struct for PatchedSettings
type PatchedSettings struct {
	// Indicates whether new users can create a new account when signing up.
	AllowNewSignups *bool `json:"allow_new_signups,omitempty"`
	// Indicates whether invited users can create an account when signing up, even if allow_new_signups is disabled.
	AllowSignupsViaWorkspaceInvitations *bool `json:"allow_signups_via_workspace_invitations,omitempty"`
	// DEPRECATED: Please use the functionally identical `allow_signups_via_workspace_invitations` instead as this attribute is being removed in the future.
	AllowSignupsViaGroupInvitations *bool `json:"allow_signups_via_group_invitations,omitempty"`
	// Indicates whether users can request a password reset link.
	AllowResetPassword *bool `json:"allow_reset_password,omitempty"`
	// Indicates whether all users can create workspaces, or just staff.
	AllowGlobalWorkspaceCreation *bool `json:"allow_global_workspace_creation,omitempty"`
	// DEPRECATED: Please use the functionally identical `allow_global_workspace_creation` instead as this attribute is being removed in the future.
	AllowGlobalGroupCreation *bool `json:"allow_global_group_creation,omitempty"`
	// Number of days after the last login for an account pending deletion to be deleted
	AccountDeletionGraceDelay *int32 `json:"account_deletion_grace_delay,omitempty"`
	// Indicates that there are no admin users in the database yet, so in the frontend the signup form will be shown instead of the login page.
	ShowAdminSignupPage *bool `json:"show_admin_signup_page,omitempty"`
	// Runs a job once per day which calculates per workspace row counts and file storage usage, displayed on the admin workspace page.
	TrackWorkspaceUsage *bool `json:"track_workspace_usage,omitempty"`
}

// NewPatchedSettings instantiates a new PatchedSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedSettings() *PatchedSettings {
	this := PatchedSettings{}
	return &this
}

// NewPatchedSettingsWithDefaults instantiates a new PatchedSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedSettingsWithDefaults() *PatchedSettings {
	this := PatchedSettings{}
	return &this
}

// GetAllowNewSignups returns the AllowNewSignups field value if set, zero value otherwise.
func (o *PatchedSettings) GetAllowNewSignups() bool {
	if o == nil || IsNil(o.AllowNewSignups) {
		var ret bool
		return ret
	}
	return *o.AllowNewSignups
}

// GetAllowNewSignupsOk returns a tuple with the AllowNewSignups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSettings) GetAllowNewSignupsOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowNewSignups) {
		return nil, false
	}
	return o.AllowNewSignups, true
}

// HasAllowNewSignups returns a boolean if a field has been set.
func (o *PatchedSettings) HasAllowNewSignups() bool {
	if o != nil && !IsNil(o.AllowNewSignups) {
		return true
	}

	return false
}

// SetAllowNewSignups gets a reference to the given bool and assigns it to the AllowNewSignups field.
func (o *PatchedSettings) SetAllowNewSignups(v bool) {
	o.AllowNewSignups = &v
}

// GetAllowSignupsViaWorkspaceInvitations returns the AllowSignupsViaWorkspaceInvitations field value if set, zero value otherwise.
func (o *PatchedSettings) GetAllowSignupsViaWorkspaceInvitations() bool {
	if o == nil || IsNil(o.AllowSignupsViaWorkspaceInvitations) {
		var ret bool
		return ret
	}
	return *o.AllowSignupsViaWorkspaceInvitations
}

// GetAllowSignupsViaWorkspaceInvitationsOk returns a tuple with the AllowSignupsViaWorkspaceInvitations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSettings) GetAllowSignupsViaWorkspaceInvitationsOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowSignupsViaWorkspaceInvitations) {
		return nil, false
	}
	return o.AllowSignupsViaWorkspaceInvitations, true
}

// HasAllowSignupsViaWorkspaceInvitations returns a boolean if a field has been set.
func (o *PatchedSettings) HasAllowSignupsViaWorkspaceInvitations() bool {
	if o != nil && !IsNil(o.AllowSignupsViaWorkspaceInvitations) {
		return true
	}

	return false
}

// SetAllowSignupsViaWorkspaceInvitations gets a reference to the given bool and assigns it to the AllowSignupsViaWorkspaceInvitations field.
func (o *PatchedSettings) SetAllowSignupsViaWorkspaceInvitations(v bool) {
	o.AllowSignupsViaWorkspaceInvitations = &v
}

// GetAllowSignupsViaGroupInvitations returns the AllowSignupsViaGroupInvitations field value if set, zero value otherwise.
func (o *PatchedSettings) GetAllowSignupsViaGroupInvitations() bool {
	if o == nil || IsNil(o.AllowSignupsViaGroupInvitations) {
		var ret bool
		return ret
	}
	return *o.AllowSignupsViaGroupInvitations
}

// GetAllowSignupsViaGroupInvitationsOk returns a tuple with the AllowSignupsViaGroupInvitations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSettings) GetAllowSignupsViaGroupInvitationsOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowSignupsViaGroupInvitations) {
		return nil, false
	}
	return o.AllowSignupsViaGroupInvitations, true
}

// HasAllowSignupsViaGroupInvitations returns a boolean if a field has been set.
func (o *PatchedSettings) HasAllowSignupsViaGroupInvitations() bool {
	if o != nil && !IsNil(o.AllowSignupsViaGroupInvitations) {
		return true
	}

	return false
}

// SetAllowSignupsViaGroupInvitations gets a reference to the given bool and assigns it to the AllowSignupsViaGroupInvitations field.
func (o *PatchedSettings) SetAllowSignupsViaGroupInvitations(v bool) {
	o.AllowSignupsViaGroupInvitations = &v
}

// GetAllowResetPassword returns the AllowResetPassword field value if set, zero value otherwise.
func (o *PatchedSettings) GetAllowResetPassword() bool {
	if o == nil || IsNil(o.AllowResetPassword) {
		var ret bool
		return ret
	}
	return *o.AllowResetPassword
}

// GetAllowResetPasswordOk returns a tuple with the AllowResetPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSettings) GetAllowResetPasswordOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowResetPassword) {
		return nil, false
	}
	return o.AllowResetPassword, true
}

// HasAllowResetPassword returns a boolean if a field has been set.
func (o *PatchedSettings) HasAllowResetPassword() bool {
	if o != nil && !IsNil(o.AllowResetPassword) {
		return true
	}

	return false
}

// SetAllowResetPassword gets a reference to the given bool and assigns it to the AllowResetPassword field.
func (o *PatchedSettings) SetAllowResetPassword(v bool) {
	o.AllowResetPassword = &v
}

// GetAllowGlobalWorkspaceCreation returns the AllowGlobalWorkspaceCreation field value if set, zero value otherwise.
func (o *PatchedSettings) GetAllowGlobalWorkspaceCreation() bool {
	if o == nil || IsNil(o.AllowGlobalWorkspaceCreation) {
		var ret bool
		return ret
	}
	return *o.AllowGlobalWorkspaceCreation
}

// GetAllowGlobalWorkspaceCreationOk returns a tuple with the AllowGlobalWorkspaceCreation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSettings) GetAllowGlobalWorkspaceCreationOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowGlobalWorkspaceCreation) {
		return nil, false
	}
	return o.AllowGlobalWorkspaceCreation, true
}

// HasAllowGlobalWorkspaceCreation returns a boolean if a field has been set.
func (o *PatchedSettings) HasAllowGlobalWorkspaceCreation() bool {
	if o != nil && !IsNil(o.AllowGlobalWorkspaceCreation) {
		return true
	}

	return false
}

// SetAllowGlobalWorkspaceCreation gets a reference to the given bool and assigns it to the AllowGlobalWorkspaceCreation field.
func (o *PatchedSettings) SetAllowGlobalWorkspaceCreation(v bool) {
	o.AllowGlobalWorkspaceCreation = &v
}

// GetAllowGlobalGroupCreation returns the AllowGlobalGroupCreation field value if set, zero value otherwise.
func (o *PatchedSettings) GetAllowGlobalGroupCreation() bool {
	if o == nil || IsNil(o.AllowGlobalGroupCreation) {
		var ret bool
		return ret
	}
	return *o.AllowGlobalGroupCreation
}

// GetAllowGlobalGroupCreationOk returns a tuple with the AllowGlobalGroupCreation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSettings) GetAllowGlobalGroupCreationOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowGlobalGroupCreation) {
		return nil, false
	}
	return o.AllowGlobalGroupCreation, true
}

// HasAllowGlobalGroupCreation returns a boolean if a field has been set.
func (o *PatchedSettings) HasAllowGlobalGroupCreation() bool {
	if o != nil && !IsNil(o.AllowGlobalGroupCreation) {
		return true
	}

	return false
}

// SetAllowGlobalGroupCreation gets a reference to the given bool and assigns it to the AllowGlobalGroupCreation field.
func (o *PatchedSettings) SetAllowGlobalGroupCreation(v bool) {
	o.AllowGlobalGroupCreation = &v
}

// GetAccountDeletionGraceDelay returns the AccountDeletionGraceDelay field value if set, zero value otherwise.
func (o *PatchedSettings) GetAccountDeletionGraceDelay() int32 {
	if o == nil || IsNil(o.AccountDeletionGraceDelay) {
		var ret int32
		return ret
	}
	return *o.AccountDeletionGraceDelay
}

// GetAccountDeletionGraceDelayOk returns a tuple with the AccountDeletionGraceDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSettings) GetAccountDeletionGraceDelayOk() (*int32, bool) {
	if o == nil || IsNil(o.AccountDeletionGraceDelay) {
		return nil, false
	}
	return o.AccountDeletionGraceDelay, true
}

// HasAccountDeletionGraceDelay returns a boolean if a field has been set.
func (o *PatchedSettings) HasAccountDeletionGraceDelay() bool {
	if o != nil && !IsNil(o.AccountDeletionGraceDelay) {
		return true
	}

	return false
}

// SetAccountDeletionGraceDelay gets a reference to the given int32 and assigns it to the AccountDeletionGraceDelay field.
func (o *PatchedSettings) SetAccountDeletionGraceDelay(v int32) {
	o.AccountDeletionGraceDelay = &v
}

// GetShowAdminSignupPage returns the ShowAdminSignupPage field value if set, zero value otherwise.
func (o *PatchedSettings) GetShowAdminSignupPage() bool {
	if o == nil || IsNil(o.ShowAdminSignupPage) {
		var ret bool
		return ret
	}
	return *o.ShowAdminSignupPage
}

// GetShowAdminSignupPageOk returns a tuple with the ShowAdminSignupPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSettings) GetShowAdminSignupPageOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowAdminSignupPage) {
		return nil, false
	}
	return o.ShowAdminSignupPage, true
}

// HasShowAdminSignupPage returns a boolean if a field has been set.
func (o *PatchedSettings) HasShowAdminSignupPage() bool {
	if o != nil && !IsNil(o.ShowAdminSignupPage) {
		return true
	}

	return false
}

// SetShowAdminSignupPage gets a reference to the given bool and assigns it to the ShowAdminSignupPage field.
func (o *PatchedSettings) SetShowAdminSignupPage(v bool) {
	o.ShowAdminSignupPage = &v
}

// GetTrackWorkspaceUsage returns the TrackWorkspaceUsage field value if set, zero value otherwise.
func (o *PatchedSettings) GetTrackWorkspaceUsage() bool {
	if o == nil || IsNil(o.TrackWorkspaceUsage) {
		var ret bool
		return ret
	}
	return *o.TrackWorkspaceUsage
}

// GetTrackWorkspaceUsageOk returns a tuple with the TrackWorkspaceUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSettings) GetTrackWorkspaceUsageOk() (*bool, bool) {
	if o == nil || IsNil(o.TrackWorkspaceUsage) {
		return nil, false
	}
	return o.TrackWorkspaceUsage, true
}

// HasTrackWorkspaceUsage returns a boolean if a field has been set.
func (o *PatchedSettings) HasTrackWorkspaceUsage() bool {
	if o != nil && !IsNil(o.TrackWorkspaceUsage) {
		return true
	}

	return false
}

// SetTrackWorkspaceUsage gets a reference to the given bool and assigns it to the TrackWorkspaceUsage field.
func (o *PatchedSettings) SetTrackWorkspaceUsage(v bool) {
	o.TrackWorkspaceUsage = &v
}

func (o PatchedSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowNewSignups) {
		toSerialize["allow_new_signups"] = o.AllowNewSignups
	}
	if !IsNil(o.AllowSignupsViaWorkspaceInvitations) {
		toSerialize["allow_signups_via_workspace_invitations"] = o.AllowSignupsViaWorkspaceInvitations
	}
	if !IsNil(o.AllowSignupsViaGroupInvitations) {
		toSerialize["allow_signups_via_group_invitations"] = o.AllowSignupsViaGroupInvitations
	}
	if !IsNil(o.AllowResetPassword) {
		toSerialize["allow_reset_password"] = o.AllowResetPassword
	}
	if !IsNil(o.AllowGlobalWorkspaceCreation) {
		toSerialize["allow_global_workspace_creation"] = o.AllowGlobalWorkspaceCreation
	}
	if !IsNil(o.AllowGlobalGroupCreation) {
		toSerialize["allow_global_group_creation"] = o.AllowGlobalGroupCreation
	}
	if !IsNil(o.AccountDeletionGraceDelay) {
		toSerialize["account_deletion_grace_delay"] = o.AccountDeletionGraceDelay
	}
	if !IsNil(o.ShowAdminSignupPage) {
		toSerialize["show_admin_signup_page"] = o.ShowAdminSignupPage
	}
	if !IsNil(o.TrackWorkspaceUsage) {
		toSerialize["track_workspace_usage"] = o.TrackWorkspaceUsage
	}
	return toSerialize, nil
}

type NullablePatchedSettings struct {
	value *PatchedSettings
	isSet bool
}

func (v NullablePatchedSettings) Get() *PatchedSettings {
	return v.value
}

func (v *NullablePatchedSettings) Set(val *PatchedSettings) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedSettings) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedSettings(val *PatchedSettings) *NullablePatchedSettings {
	return &NullablePatchedSettings{value: val, isSet: true}
}

func (v NullablePatchedSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


