/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the PasswordAuthProviderModelAuthProvider type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PasswordAuthProviderModelAuthProvider{}

// PasswordAuthProviderModelAuthProvider struct for PasswordAuthProviderModelAuthProvider
type PasswordAuthProviderModelAuthProvider struct {
	Id int32 `json:"id"`
	// The type of the related field.
	Type string `json:"type"`
	// The email domain (if any) registered with this password provider.
	Domain *string `json:"domain,omitempty"`
	// Whether the provider is enabled or not.
	Enabled *bool `json:"enabled,omitempty"`
}

// NewPasswordAuthProviderModelAuthProvider instantiates a new PasswordAuthProviderModelAuthProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPasswordAuthProviderModelAuthProvider(id int32, type_ string) *PasswordAuthProviderModelAuthProvider {
	this := PasswordAuthProviderModelAuthProvider{}
	this.Id = id
	this.Type = type_
	return &this
}

// NewPasswordAuthProviderModelAuthProviderWithDefaults instantiates a new PasswordAuthProviderModelAuthProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPasswordAuthProviderModelAuthProviderWithDefaults() *PasswordAuthProviderModelAuthProvider {
	this := PasswordAuthProviderModelAuthProvider{}
	return &this
}

// GetId returns the Id field value
func (o *PasswordAuthProviderModelAuthProvider) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PasswordAuthProviderModelAuthProvider) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PasswordAuthProviderModelAuthProvider) SetId(v int32) {
	o.Id = v
}

// GetType returns the Type field value
func (o *PasswordAuthProviderModelAuthProvider) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PasswordAuthProviderModelAuthProvider) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PasswordAuthProviderModelAuthProvider) SetType(v string) {
	o.Type = v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *PasswordAuthProviderModelAuthProvider) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PasswordAuthProviderModelAuthProvider) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *PasswordAuthProviderModelAuthProvider) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *PasswordAuthProviderModelAuthProvider) SetDomain(v string) {
	o.Domain = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *PasswordAuthProviderModelAuthProvider) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PasswordAuthProviderModelAuthProvider) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *PasswordAuthProviderModelAuthProvider) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *PasswordAuthProviderModelAuthProvider) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o PasswordAuthProviderModelAuthProvider) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PasswordAuthProviderModelAuthProvider) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: id is readOnly
	// skip: type is readOnly
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	return toSerialize, nil
}

type NullablePasswordAuthProviderModelAuthProvider struct {
	value *PasswordAuthProviderModelAuthProvider
	isSet bool
}

func (v NullablePasswordAuthProviderModelAuthProvider) Get() *PasswordAuthProviderModelAuthProvider {
	return v.value
}

func (v *NullablePasswordAuthProviderModelAuthProvider) Set(val *PasswordAuthProviderModelAuthProvider) {
	v.value = val
	v.isSet = true
}

func (v NullablePasswordAuthProviderModelAuthProvider) IsSet() bool {
	return v.isSet
}

func (v *NullablePasswordAuthProviderModelAuthProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePasswordAuthProviderModelAuthProvider(val *PasswordAuthProviderModelAuthProvider) *NullablePasswordAuthProviderModelAuthProvider {
	return &NullablePasswordAuthProviderModelAuthProvider{value: val, isSet: true}
}

func (v NullablePasswordAuthProviderModelAuthProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePasswordAuthProviderModelAuthProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


