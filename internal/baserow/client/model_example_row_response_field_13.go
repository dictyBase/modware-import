/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ExampleRowResponseField13 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExampleRowResponseField13{}

// ExampleRowResponseField13 This field represents the `single_select` field. The number in field_13 is in a normal request or response the id of the field.This field accepts an `integer` representing the chosen select option id related to the field. Available ids can be found when getting or listing the field. The response represents chosen field, but also the value and color is exposed.
type ExampleRowResponseField13 struct {
	Id *int32 `json:"id,omitempty"`
	Value string `json:"value"`
	Color string `json:"color"`
}

// NewExampleRowResponseField13 instantiates a new ExampleRowResponseField13 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExampleRowResponseField13(value string, color string) *ExampleRowResponseField13 {
	this := ExampleRowResponseField13{}
	this.Value = value
	this.Color = color
	return &this
}

// NewExampleRowResponseField13WithDefaults instantiates a new ExampleRowResponseField13 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExampleRowResponseField13WithDefaults() *ExampleRowResponseField13 {
	this := ExampleRowResponseField13{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ExampleRowResponseField13) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleRowResponseField13) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ExampleRowResponseField13) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ExampleRowResponseField13) SetId(v int32) {
	o.Id = &v
}

// GetValue returns the Value field value
func (o *ExampleRowResponseField13) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *ExampleRowResponseField13) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *ExampleRowResponseField13) SetValue(v string) {
	o.Value = v
}

// GetColor returns the Color field value
func (o *ExampleRowResponseField13) GetColor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Color
}

// GetColorOk returns a tuple with the Color field value
// and a boolean to check if the value has been set.
func (o *ExampleRowResponseField13) GetColorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Color, true
}

// SetColor sets field value
func (o *ExampleRowResponseField13) SetColor(v string) {
	o.Color = v
}

func (o ExampleRowResponseField13) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExampleRowResponseField13) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["value"] = o.Value
	toSerialize["color"] = o.Color
	return toSerialize, nil
}

type NullableExampleRowResponseField13 struct {
	value *ExampleRowResponseField13
	isSet bool
}

func (v NullableExampleRowResponseField13) Get() *ExampleRowResponseField13 {
	return v.value
}

func (v *NullableExampleRowResponseField13) Set(val *ExampleRowResponseField13) {
	v.value = val
	v.isSet = true
}

func (v NullableExampleRowResponseField13) IsSet() bool {
	return v.isSet
}

func (v *NullableExampleRowResponseField13) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExampleRowResponseField13(val *ExampleRowResponseField13) *NullableExampleRowResponseField13 {
	return &NullableExampleRowResponseField13{value: val, isSet: true}
}

func (v NullableExampleRowResponseField13) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExampleRowResponseField13) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


