/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the OrderTables type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderTables{}

// OrderTables struct for OrderTables
type OrderTables struct {
	// Table ids in the desired order.
	TableIds []int32 `json:"table_ids"`
}

// NewOrderTables instantiates a new OrderTables object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderTables(tableIds []int32) *OrderTables {
	this := OrderTables{}
	this.TableIds = tableIds
	return &this
}

// NewOrderTablesWithDefaults instantiates a new OrderTables object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderTablesWithDefaults() *OrderTables {
	this := OrderTables{}
	return &this
}

// GetTableIds returns the TableIds field value
func (o *OrderTables) GetTableIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.TableIds
}

// GetTableIdsOk returns a tuple with the TableIds field value
// and a boolean to check if the value has been set.
func (o *OrderTables) GetTableIdsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TableIds, true
}

// SetTableIds sets field value
func (o *OrderTables) SetTableIds(v []int32) {
	o.TableIds = v
}

func (o OrderTables) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderTables) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["table_ids"] = o.TableIds
	return toSerialize, nil
}

type NullableOrderTables struct {
	value *OrderTables
	isSet bool
}

func (v NullableOrderTables) Get() *OrderTables {
	return v.value
}

func (v *NullableOrderTables) Set(val *OrderTables) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderTables) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderTables) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderTables(val *OrderTables) *NullableOrderTables {
	return &NullableOrderTables{value: val, isSet: true}
}

func (v NullableOrderTables) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderTables) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


