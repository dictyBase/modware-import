/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the TypeFormulaRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TypeFormulaRequest{}

// TypeFormulaRequest struct for TypeFormulaRequest
type TypeFormulaRequest struct {
	Formula string `json:"formula"`
	Name string `json:"name"`
}

// NewTypeFormulaRequest instantiates a new TypeFormulaRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTypeFormulaRequest(formula string, name string) *TypeFormulaRequest {
	this := TypeFormulaRequest{}
	this.Formula = formula
	this.Name = name
	return &this
}

// NewTypeFormulaRequestWithDefaults instantiates a new TypeFormulaRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTypeFormulaRequestWithDefaults() *TypeFormulaRequest {
	this := TypeFormulaRequest{}
	return &this
}

// GetFormula returns the Formula field value
func (o *TypeFormulaRequest) GetFormula() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Formula
}

// GetFormulaOk returns a tuple with the Formula field value
// and a boolean to check if the value has been set.
func (o *TypeFormulaRequest) GetFormulaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Formula, true
}

// SetFormula sets field value
func (o *TypeFormulaRequest) SetFormula(v string) {
	o.Formula = v
}

// GetName returns the Name field value
func (o *TypeFormulaRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TypeFormulaRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TypeFormulaRequest) SetName(v string) {
	o.Name = v
}

func (o TypeFormulaRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TypeFormulaRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["formula"] = o.Formula
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullableTypeFormulaRequest struct {
	value *TypeFormulaRequest
	isSet bool
}

func (v NullableTypeFormulaRequest) Get() *TypeFormulaRequest {
	return v.value
}

func (v *NullableTypeFormulaRequest) Set(val *TypeFormulaRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTypeFormulaRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTypeFormulaRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTypeFormulaRequest(val *TypeFormulaRequest) *NullableTypeFormulaRequest {
	return &NullableTypeFormulaRequest{value: val, isSet: true}
}

func (v NullableTypeFormulaRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTypeFormulaRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


