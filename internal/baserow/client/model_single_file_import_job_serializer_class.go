/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the SingleFileImportJobSerializerClass type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SingleFileImportJobSerializerClass{}

// SingleFileImportJobSerializerClass struct for SingleFileImportJobSerializerClass
type SingleFileImportJobSerializerClass struct {
	Id int32 `json:"id"`
	// The type of the job.
	Type string `json:"type"`
	// A percentage indicating how far along the job is. 100 means that it's finished.
	ProgressPercentage int32 `json:"progress_percentage"`
	// Indicates the state of the import job.
	State string `json:"state"`
	// A human readable error message indicating what went wrong.
	HumanReadableError *string `json:"human_readable_error,omitempty"`
	// Database id where the table will be created.
	DatabaseId int32 `json:"database_id"`
	// The name of the new table.
	Name *string `json:"name,omitempty"`
	// Table id where the data will be imported.
	TableId *int32 `json:"table_id,omitempty"`
	FirstRowHeader *bool `json:"first_row_header,omitempty"`
	Report FileImportJobJobReport `json:"report"`
}

// NewSingleFileImportJobSerializerClass instantiates a new SingleFileImportJobSerializerClass object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSingleFileImportJobSerializerClass(id int32, type_ string, progressPercentage int32, state string, databaseId int32, report FileImportJobJobReport) *SingleFileImportJobSerializerClass {
	this := SingleFileImportJobSerializerClass{}
	this.Id = id
	this.Type = type_
	this.ProgressPercentage = progressPercentage
	this.State = state
	this.DatabaseId = databaseId
	var firstRowHeader bool = false
	this.FirstRowHeader = &firstRowHeader
	this.Report = report
	return &this
}

// NewSingleFileImportJobSerializerClassWithDefaults instantiates a new SingleFileImportJobSerializerClass object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSingleFileImportJobSerializerClassWithDefaults() *SingleFileImportJobSerializerClass {
	this := SingleFileImportJobSerializerClass{}
	var firstRowHeader bool = false
	this.FirstRowHeader = &firstRowHeader
	return &this
}

// GetId returns the Id field value
func (o *SingleFileImportJobSerializerClass) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SingleFileImportJobSerializerClass) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SingleFileImportJobSerializerClass) SetId(v int32) {
	o.Id = v
}

// GetType returns the Type field value
func (o *SingleFileImportJobSerializerClass) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SingleFileImportJobSerializerClass) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SingleFileImportJobSerializerClass) SetType(v string) {
	o.Type = v
}

// GetProgressPercentage returns the ProgressPercentage field value
func (o *SingleFileImportJobSerializerClass) GetProgressPercentage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProgressPercentage
}

// GetProgressPercentageOk returns a tuple with the ProgressPercentage field value
// and a boolean to check if the value has been set.
func (o *SingleFileImportJobSerializerClass) GetProgressPercentageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProgressPercentage, true
}

// SetProgressPercentage sets field value
func (o *SingleFileImportJobSerializerClass) SetProgressPercentage(v int32) {
	o.ProgressPercentage = v
}

// GetState returns the State field value
func (o *SingleFileImportJobSerializerClass) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *SingleFileImportJobSerializerClass) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *SingleFileImportJobSerializerClass) SetState(v string) {
	o.State = v
}

// GetHumanReadableError returns the HumanReadableError field value if set, zero value otherwise.
func (o *SingleFileImportJobSerializerClass) GetHumanReadableError() string {
	if o == nil || IsNil(o.HumanReadableError) {
		var ret string
		return ret
	}
	return *o.HumanReadableError
}

// GetHumanReadableErrorOk returns a tuple with the HumanReadableError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SingleFileImportJobSerializerClass) GetHumanReadableErrorOk() (*string, bool) {
	if o == nil || IsNil(o.HumanReadableError) {
		return nil, false
	}
	return o.HumanReadableError, true
}

// HasHumanReadableError returns a boolean if a field has been set.
func (o *SingleFileImportJobSerializerClass) HasHumanReadableError() bool {
	if o != nil && !IsNil(o.HumanReadableError) {
		return true
	}

	return false
}

// SetHumanReadableError gets a reference to the given string and assigns it to the HumanReadableError field.
func (o *SingleFileImportJobSerializerClass) SetHumanReadableError(v string) {
	o.HumanReadableError = &v
}

// GetDatabaseId returns the DatabaseId field value
func (o *SingleFileImportJobSerializerClass) GetDatabaseId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DatabaseId
}

// GetDatabaseIdOk returns a tuple with the DatabaseId field value
// and a boolean to check if the value has been set.
func (o *SingleFileImportJobSerializerClass) GetDatabaseIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DatabaseId, true
}

// SetDatabaseId sets field value
func (o *SingleFileImportJobSerializerClass) SetDatabaseId(v int32) {
	o.DatabaseId = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SingleFileImportJobSerializerClass) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SingleFileImportJobSerializerClass) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SingleFileImportJobSerializerClass) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SingleFileImportJobSerializerClass) SetName(v string) {
	o.Name = &v
}

// GetTableId returns the TableId field value if set, zero value otherwise.
func (o *SingleFileImportJobSerializerClass) GetTableId() int32 {
	if o == nil || IsNil(o.TableId) {
		var ret int32
		return ret
	}
	return *o.TableId
}

// GetTableIdOk returns a tuple with the TableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SingleFileImportJobSerializerClass) GetTableIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TableId) {
		return nil, false
	}
	return o.TableId, true
}

// HasTableId returns a boolean if a field has been set.
func (o *SingleFileImportJobSerializerClass) HasTableId() bool {
	if o != nil && !IsNil(o.TableId) {
		return true
	}

	return false
}

// SetTableId gets a reference to the given int32 and assigns it to the TableId field.
func (o *SingleFileImportJobSerializerClass) SetTableId(v int32) {
	o.TableId = &v
}

// GetFirstRowHeader returns the FirstRowHeader field value if set, zero value otherwise.
func (o *SingleFileImportJobSerializerClass) GetFirstRowHeader() bool {
	if o == nil || IsNil(o.FirstRowHeader) {
		var ret bool
		return ret
	}
	return *o.FirstRowHeader
}

// GetFirstRowHeaderOk returns a tuple with the FirstRowHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SingleFileImportJobSerializerClass) GetFirstRowHeaderOk() (*bool, bool) {
	if o == nil || IsNil(o.FirstRowHeader) {
		return nil, false
	}
	return o.FirstRowHeader, true
}

// HasFirstRowHeader returns a boolean if a field has been set.
func (o *SingleFileImportJobSerializerClass) HasFirstRowHeader() bool {
	if o != nil && !IsNil(o.FirstRowHeader) {
		return true
	}

	return false
}

// SetFirstRowHeader gets a reference to the given bool and assigns it to the FirstRowHeader field.
func (o *SingleFileImportJobSerializerClass) SetFirstRowHeader(v bool) {
	o.FirstRowHeader = &v
}

// GetReport returns the Report field value
func (o *SingleFileImportJobSerializerClass) GetReport() FileImportJobJobReport {
	if o == nil {
		var ret FileImportJobJobReport
		return ret
	}

	return o.Report
}

// GetReportOk returns a tuple with the Report field value
// and a boolean to check if the value has been set.
func (o *SingleFileImportJobSerializerClass) GetReportOk() (*FileImportJobJobReport, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Report, true
}

// SetReport sets field value
func (o *SingleFileImportJobSerializerClass) SetReport(v FileImportJobJobReport) {
	o.Report = v
}

func (o SingleFileImportJobSerializerClass) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SingleFileImportJobSerializerClass) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: id is readOnly
	// skip: type is readOnly
	toSerialize["progress_percentage"] = o.ProgressPercentage
	toSerialize["state"] = o.State
	if !IsNil(o.HumanReadableError) {
		toSerialize["human_readable_error"] = o.HumanReadableError
	}
	toSerialize["database_id"] = o.DatabaseId
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.TableId) {
		toSerialize["table_id"] = o.TableId
	}
	if !IsNil(o.FirstRowHeader) {
		toSerialize["first_row_header"] = o.FirstRowHeader
	}
	toSerialize["report"] = o.Report
	return toSerialize, nil
}

type NullableSingleFileImportJobSerializerClass struct {
	value *SingleFileImportJobSerializerClass
	isSet bool
}

func (v NullableSingleFileImportJobSerializerClass) Get() *SingleFileImportJobSerializerClass {
	return v.value
}

func (v *NullableSingleFileImportJobSerializerClass) Set(val *SingleFileImportJobSerializerClass) {
	v.value = val
	v.isSet = true
}

func (v NullableSingleFileImportJobSerializerClass) IsSet() bool {
	return v.isSet
}

func (v *NullableSingleFileImportJobSerializerClass) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSingleFileImportJobSerializerClass(val *SingleFileImportJobSerializerClass) *NullableSingleFileImportJobSerializerClass {
	return &NullableSingleFileImportJobSerializerClass{value: val, isSet: true}
}

func (v NullableSingleFileImportJobSerializerClass) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSingleFileImportJobSerializerClass) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


