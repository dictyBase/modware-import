/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ApplicationWorkspace type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationWorkspace{}

// ApplicationWorkspace The workspace that the application belongs to.
type ApplicationWorkspace struct {
	Id int32 `json:"id"`
	Name string `json:"name"`
}

// NewApplicationWorkspace instantiates a new ApplicationWorkspace object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationWorkspace(id int32, name string) *ApplicationWorkspace {
	this := ApplicationWorkspace{}
	this.Id = id
	this.Name = name
	return &this
}

// NewApplicationWorkspaceWithDefaults instantiates a new ApplicationWorkspace object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationWorkspaceWithDefaults() *ApplicationWorkspace {
	this := ApplicationWorkspace{}
	return &this
}

// GetId returns the Id field value
func (o *ApplicationWorkspace) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ApplicationWorkspace) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ApplicationWorkspace) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *ApplicationWorkspace) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ApplicationWorkspace) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ApplicationWorkspace) SetName(v string) {
	o.Name = v
}

func (o ApplicationWorkspace) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationWorkspace) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: id is readOnly
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullableApplicationWorkspace struct {
	value *ApplicationWorkspace
	isSet bool
}

func (v NullableApplicationWorkspace) Get() *ApplicationWorkspace {
	return v.value
}

func (v *NullableApplicationWorkspace) Set(val *ApplicationWorkspace) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationWorkspace) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationWorkspace) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationWorkspace(val *ApplicationWorkspace) *NullableApplicationWorkspace {
	return &NullableApplicationWorkspace{value: val, isSet: true}
}

func (v NullableApplicationWorkspace) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationWorkspace) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


