/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the TableWebhookTestCallRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TableWebhookTestCallRequest{}

// TableWebhookTestCallRequest struct for TableWebhookTestCallRequest
type TableWebhookTestCallRequest struct {
	// The URL that must be called when the webhook is triggered.
	Url string `json:"url"`
	EventType EventTypeEnum `json:"event_type"`
	RequestMethod *RequestMethodEnum `json:"request_method,omitempty"`
	// The additional headers as an object where the key is the name and the value the value.
	Headers map[string]interface{} `json:"headers,omitempty"`
	// Indicates whether the field names must be used as payload key instead of the id.
	UseUserFieldNames *bool `json:"use_user_field_names,omitempty"`
}

// NewTableWebhookTestCallRequest instantiates a new TableWebhookTestCallRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTableWebhookTestCallRequest(url string, eventType EventTypeEnum) *TableWebhookTestCallRequest {
	this := TableWebhookTestCallRequest{}
	this.Url = url
	this.EventType = eventType
	return &this
}

// NewTableWebhookTestCallRequestWithDefaults instantiates a new TableWebhookTestCallRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTableWebhookTestCallRequestWithDefaults() *TableWebhookTestCallRequest {
	this := TableWebhookTestCallRequest{}
	return &this
}

// GetUrl returns the Url field value
func (o *TableWebhookTestCallRequest) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *TableWebhookTestCallRequest) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *TableWebhookTestCallRequest) SetUrl(v string) {
	o.Url = v
}

// GetEventType returns the EventType field value
func (o *TableWebhookTestCallRequest) GetEventType() EventTypeEnum {
	if o == nil {
		var ret EventTypeEnum
		return ret
	}

	return o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value
// and a boolean to check if the value has been set.
func (o *TableWebhookTestCallRequest) GetEventTypeOk() (*EventTypeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventType, true
}

// SetEventType sets field value
func (o *TableWebhookTestCallRequest) SetEventType(v EventTypeEnum) {
	o.EventType = v
}

// GetRequestMethod returns the RequestMethod field value if set, zero value otherwise.
func (o *TableWebhookTestCallRequest) GetRequestMethod() RequestMethodEnum {
	if o == nil || IsNil(o.RequestMethod) {
		var ret RequestMethodEnum
		return ret
	}
	return *o.RequestMethod
}

// GetRequestMethodOk returns a tuple with the RequestMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableWebhookTestCallRequest) GetRequestMethodOk() (*RequestMethodEnum, bool) {
	if o == nil || IsNil(o.RequestMethod) {
		return nil, false
	}
	return o.RequestMethod, true
}

// HasRequestMethod returns a boolean if a field has been set.
func (o *TableWebhookTestCallRequest) HasRequestMethod() bool {
	if o != nil && !IsNil(o.RequestMethod) {
		return true
	}

	return false
}

// SetRequestMethod gets a reference to the given RequestMethodEnum and assigns it to the RequestMethod field.
func (o *TableWebhookTestCallRequest) SetRequestMethod(v RequestMethodEnum) {
	o.RequestMethod = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *TableWebhookTestCallRequest) GetHeaders() map[string]interface{} {
	if o == nil || IsNil(o.Headers) {
		var ret map[string]interface{}
		return ret
	}
	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableWebhookTestCallRequest) GetHeadersOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Headers) {
		return map[string]interface{}{}, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *TableWebhookTestCallRequest) HasHeaders() bool {
	if o != nil && !IsNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given map[string]interface{} and assigns it to the Headers field.
func (o *TableWebhookTestCallRequest) SetHeaders(v map[string]interface{}) {
	o.Headers = v
}

// GetUseUserFieldNames returns the UseUserFieldNames field value if set, zero value otherwise.
func (o *TableWebhookTestCallRequest) GetUseUserFieldNames() bool {
	if o == nil || IsNil(o.UseUserFieldNames) {
		var ret bool
		return ret
	}
	return *o.UseUserFieldNames
}

// GetUseUserFieldNamesOk returns a tuple with the UseUserFieldNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TableWebhookTestCallRequest) GetUseUserFieldNamesOk() (*bool, bool) {
	if o == nil || IsNil(o.UseUserFieldNames) {
		return nil, false
	}
	return o.UseUserFieldNames, true
}

// HasUseUserFieldNames returns a boolean if a field has been set.
func (o *TableWebhookTestCallRequest) HasUseUserFieldNames() bool {
	if o != nil && !IsNil(o.UseUserFieldNames) {
		return true
	}

	return false
}

// SetUseUserFieldNames gets a reference to the given bool and assigns it to the UseUserFieldNames field.
func (o *TableWebhookTestCallRequest) SetUseUserFieldNames(v bool) {
	o.UseUserFieldNames = &v
}

func (o TableWebhookTestCallRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TableWebhookTestCallRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	toSerialize["event_type"] = o.EventType
	if !IsNil(o.RequestMethod) {
		toSerialize["request_method"] = o.RequestMethod
	}
	if !IsNil(o.Headers) {
		toSerialize["headers"] = o.Headers
	}
	if !IsNil(o.UseUserFieldNames) {
		toSerialize["use_user_field_names"] = o.UseUserFieldNames
	}
	return toSerialize, nil
}

type NullableTableWebhookTestCallRequest struct {
	value *TableWebhookTestCallRequest
	isSet bool
}

func (v NullableTableWebhookTestCallRequest) Get() *TableWebhookTestCallRequest {
	return v.value
}

func (v *NullableTableWebhookTestCallRequest) Set(val *TableWebhookTestCallRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTableWebhookTestCallRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTableWebhookTestCallRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTableWebhookTestCallRequest(val *TableWebhookTestCallRequest) *NullableTableWebhookTestCallRequest {
	return &NullableTableWebhookTestCallRequest{value: val, isSet: true}
}

func (v NullableTableWebhookTestCallRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTableWebhookTestCallRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


