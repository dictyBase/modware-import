/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// JobTypeCreateJob - struct for JobTypeCreateJob
type JobTypeCreateJob struct {
	RequestAirtableImportJobCreateJob *RequestAirtableImportJobCreateJob
	RequestAuditLogExportJobCreateJob *RequestAuditLogExportJobCreateJob
	RequestCreateSnapshotJobCreateJob *RequestCreateSnapshotJobCreateJob
	RequestDuplicateApplicationJobCreateJob *RequestDuplicateApplicationJobCreateJob
	RequestDuplicateFieldJobCreateJob *RequestDuplicateFieldJobCreateJob
	RequestDuplicateTableJobCreateJob *RequestDuplicateTableJobCreateJob
	RequestFileImportJobCreateJob *RequestFileImportJobCreateJob
	RequestInstallTemplateJobCreateJob *RequestInstallTemplateJobCreateJob
	RequestRestoreSnapshotJobCreateJob *RequestRestoreSnapshotJobCreateJob
}

// RequestAirtableImportJobCreateJobAsJobTypeCreateJob is a convenience function that returns RequestAirtableImportJobCreateJob wrapped in JobTypeCreateJob
func RequestAirtableImportJobCreateJobAsJobTypeCreateJob(v *RequestAirtableImportJobCreateJob) JobTypeCreateJob {
	return JobTypeCreateJob{
		RequestAirtableImportJobCreateJob: v,
	}
}

// RequestAuditLogExportJobCreateJobAsJobTypeCreateJob is a convenience function that returns RequestAuditLogExportJobCreateJob wrapped in JobTypeCreateJob
func RequestAuditLogExportJobCreateJobAsJobTypeCreateJob(v *RequestAuditLogExportJobCreateJob) JobTypeCreateJob {
	return JobTypeCreateJob{
		RequestAuditLogExportJobCreateJob: v,
	}
}

// RequestCreateSnapshotJobCreateJobAsJobTypeCreateJob is a convenience function that returns RequestCreateSnapshotJobCreateJob wrapped in JobTypeCreateJob
func RequestCreateSnapshotJobCreateJobAsJobTypeCreateJob(v *RequestCreateSnapshotJobCreateJob) JobTypeCreateJob {
	return JobTypeCreateJob{
		RequestCreateSnapshotJobCreateJob: v,
	}
}

// RequestDuplicateApplicationJobCreateJobAsJobTypeCreateJob is a convenience function that returns RequestDuplicateApplicationJobCreateJob wrapped in JobTypeCreateJob
func RequestDuplicateApplicationJobCreateJobAsJobTypeCreateJob(v *RequestDuplicateApplicationJobCreateJob) JobTypeCreateJob {
	return JobTypeCreateJob{
		RequestDuplicateApplicationJobCreateJob: v,
	}
}

// RequestDuplicateFieldJobCreateJobAsJobTypeCreateJob is a convenience function that returns RequestDuplicateFieldJobCreateJob wrapped in JobTypeCreateJob
func RequestDuplicateFieldJobCreateJobAsJobTypeCreateJob(v *RequestDuplicateFieldJobCreateJob) JobTypeCreateJob {
	return JobTypeCreateJob{
		RequestDuplicateFieldJobCreateJob: v,
	}
}

// RequestDuplicateTableJobCreateJobAsJobTypeCreateJob is a convenience function that returns RequestDuplicateTableJobCreateJob wrapped in JobTypeCreateJob
func RequestDuplicateTableJobCreateJobAsJobTypeCreateJob(v *RequestDuplicateTableJobCreateJob) JobTypeCreateJob {
	return JobTypeCreateJob{
		RequestDuplicateTableJobCreateJob: v,
	}
}

// RequestFileImportJobCreateJobAsJobTypeCreateJob is a convenience function that returns RequestFileImportJobCreateJob wrapped in JobTypeCreateJob
func RequestFileImportJobCreateJobAsJobTypeCreateJob(v *RequestFileImportJobCreateJob) JobTypeCreateJob {
	return JobTypeCreateJob{
		RequestFileImportJobCreateJob: v,
	}
}

// RequestInstallTemplateJobCreateJobAsJobTypeCreateJob is a convenience function that returns RequestInstallTemplateJobCreateJob wrapped in JobTypeCreateJob
func RequestInstallTemplateJobCreateJobAsJobTypeCreateJob(v *RequestInstallTemplateJobCreateJob) JobTypeCreateJob {
	return JobTypeCreateJob{
		RequestInstallTemplateJobCreateJob: v,
	}
}

// RequestRestoreSnapshotJobCreateJobAsJobTypeCreateJob is a convenience function that returns RequestRestoreSnapshotJobCreateJob wrapped in JobTypeCreateJob
func RequestRestoreSnapshotJobCreateJobAsJobTypeCreateJob(v *RequestRestoreSnapshotJobCreateJob) JobTypeCreateJob {
	return JobTypeCreateJob{
		RequestRestoreSnapshotJobCreateJob: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *JobTypeCreateJob) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into RequestAirtableImportJobCreateJob
	err = newStrictDecoder(data).Decode(&dst.RequestAirtableImportJobCreateJob)
	if err == nil {
		jsonRequestAirtableImportJobCreateJob, _ := json.Marshal(dst.RequestAirtableImportJobCreateJob)
		if string(jsonRequestAirtableImportJobCreateJob) == "{}" { // empty struct
			dst.RequestAirtableImportJobCreateJob = nil
		} else {
			match++
		}
	} else {
		dst.RequestAirtableImportJobCreateJob = nil
	}

	// try to unmarshal data into RequestAuditLogExportJobCreateJob
	err = newStrictDecoder(data).Decode(&dst.RequestAuditLogExportJobCreateJob)
	if err == nil {
		jsonRequestAuditLogExportJobCreateJob, _ := json.Marshal(dst.RequestAuditLogExportJobCreateJob)
		if string(jsonRequestAuditLogExportJobCreateJob) == "{}" { // empty struct
			dst.RequestAuditLogExportJobCreateJob = nil
		} else {
			match++
		}
	} else {
		dst.RequestAuditLogExportJobCreateJob = nil
	}

	// try to unmarshal data into RequestCreateSnapshotJobCreateJob
	err = newStrictDecoder(data).Decode(&dst.RequestCreateSnapshotJobCreateJob)
	if err == nil {
		jsonRequestCreateSnapshotJobCreateJob, _ := json.Marshal(dst.RequestCreateSnapshotJobCreateJob)
		if string(jsonRequestCreateSnapshotJobCreateJob) == "{}" { // empty struct
			dst.RequestCreateSnapshotJobCreateJob = nil
		} else {
			match++
		}
	} else {
		dst.RequestCreateSnapshotJobCreateJob = nil
	}

	// try to unmarshal data into RequestDuplicateApplicationJobCreateJob
	err = newStrictDecoder(data).Decode(&dst.RequestDuplicateApplicationJobCreateJob)
	if err == nil {
		jsonRequestDuplicateApplicationJobCreateJob, _ := json.Marshal(dst.RequestDuplicateApplicationJobCreateJob)
		if string(jsonRequestDuplicateApplicationJobCreateJob) == "{}" { // empty struct
			dst.RequestDuplicateApplicationJobCreateJob = nil
		} else {
			match++
		}
	} else {
		dst.RequestDuplicateApplicationJobCreateJob = nil
	}

	// try to unmarshal data into RequestDuplicateFieldJobCreateJob
	err = newStrictDecoder(data).Decode(&dst.RequestDuplicateFieldJobCreateJob)
	if err == nil {
		jsonRequestDuplicateFieldJobCreateJob, _ := json.Marshal(dst.RequestDuplicateFieldJobCreateJob)
		if string(jsonRequestDuplicateFieldJobCreateJob) == "{}" { // empty struct
			dst.RequestDuplicateFieldJobCreateJob = nil
		} else {
			match++
		}
	} else {
		dst.RequestDuplicateFieldJobCreateJob = nil
	}

	// try to unmarshal data into RequestDuplicateTableJobCreateJob
	err = newStrictDecoder(data).Decode(&dst.RequestDuplicateTableJobCreateJob)
	if err == nil {
		jsonRequestDuplicateTableJobCreateJob, _ := json.Marshal(dst.RequestDuplicateTableJobCreateJob)
		if string(jsonRequestDuplicateTableJobCreateJob) == "{}" { // empty struct
			dst.RequestDuplicateTableJobCreateJob = nil
		} else {
			match++
		}
	} else {
		dst.RequestDuplicateTableJobCreateJob = nil
	}

	// try to unmarshal data into RequestFileImportJobCreateJob
	err = newStrictDecoder(data).Decode(&dst.RequestFileImportJobCreateJob)
	if err == nil {
		jsonRequestFileImportJobCreateJob, _ := json.Marshal(dst.RequestFileImportJobCreateJob)
		if string(jsonRequestFileImportJobCreateJob) == "{}" { // empty struct
			dst.RequestFileImportJobCreateJob = nil
		} else {
			match++
		}
	} else {
		dst.RequestFileImportJobCreateJob = nil
	}

	// try to unmarshal data into RequestInstallTemplateJobCreateJob
	err = newStrictDecoder(data).Decode(&dst.RequestInstallTemplateJobCreateJob)
	if err == nil {
		jsonRequestInstallTemplateJobCreateJob, _ := json.Marshal(dst.RequestInstallTemplateJobCreateJob)
		if string(jsonRequestInstallTemplateJobCreateJob) == "{}" { // empty struct
			dst.RequestInstallTemplateJobCreateJob = nil
		} else {
			match++
		}
	} else {
		dst.RequestInstallTemplateJobCreateJob = nil
	}

	// try to unmarshal data into RequestRestoreSnapshotJobCreateJob
	err = newStrictDecoder(data).Decode(&dst.RequestRestoreSnapshotJobCreateJob)
	if err == nil {
		jsonRequestRestoreSnapshotJobCreateJob, _ := json.Marshal(dst.RequestRestoreSnapshotJobCreateJob)
		if string(jsonRequestRestoreSnapshotJobCreateJob) == "{}" { // empty struct
			dst.RequestRestoreSnapshotJobCreateJob = nil
		} else {
			match++
		}
	} else {
		dst.RequestRestoreSnapshotJobCreateJob = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.RequestAirtableImportJobCreateJob = nil
		dst.RequestAuditLogExportJobCreateJob = nil
		dst.RequestCreateSnapshotJobCreateJob = nil
		dst.RequestDuplicateApplicationJobCreateJob = nil
		dst.RequestDuplicateFieldJobCreateJob = nil
		dst.RequestDuplicateTableJobCreateJob = nil
		dst.RequestFileImportJobCreateJob = nil
		dst.RequestInstallTemplateJobCreateJob = nil
		dst.RequestRestoreSnapshotJobCreateJob = nil

		return fmt.Errorf("data matches more than one schema in oneOf(JobTypeCreateJob)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(JobTypeCreateJob)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src JobTypeCreateJob) MarshalJSON() ([]byte, error) {
	if src.RequestAirtableImportJobCreateJob != nil {
		return json.Marshal(&src.RequestAirtableImportJobCreateJob)
	}

	if src.RequestAuditLogExportJobCreateJob != nil {
		return json.Marshal(&src.RequestAuditLogExportJobCreateJob)
	}

	if src.RequestCreateSnapshotJobCreateJob != nil {
		return json.Marshal(&src.RequestCreateSnapshotJobCreateJob)
	}

	if src.RequestDuplicateApplicationJobCreateJob != nil {
		return json.Marshal(&src.RequestDuplicateApplicationJobCreateJob)
	}

	if src.RequestDuplicateFieldJobCreateJob != nil {
		return json.Marshal(&src.RequestDuplicateFieldJobCreateJob)
	}

	if src.RequestDuplicateTableJobCreateJob != nil {
		return json.Marshal(&src.RequestDuplicateTableJobCreateJob)
	}

	if src.RequestFileImportJobCreateJob != nil {
		return json.Marshal(&src.RequestFileImportJobCreateJob)
	}

	if src.RequestInstallTemplateJobCreateJob != nil {
		return json.Marshal(&src.RequestInstallTemplateJobCreateJob)
	}

	if src.RequestRestoreSnapshotJobCreateJob != nil {
		return json.Marshal(&src.RequestRestoreSnapshotJobCreateJob)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *JobTypeCreateJob) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.RequestAirtableImportJobCreateJob != nil {
		return obj.RequestAirtableImportJobCreateJob
	}

	if obj.RequestAuditLogExportJobCreateJob != nil {
		return obj.RequestAuditLogExportJobCreateJob
	}

	if obj.RequestCreateSnapshotJobCreateJob != nil {
		return obj.RequestCreateSnapshotJobCreateJob
	}

	if obj.RequestDuplicateApplicationJobCreateJob != nil {
		return obj.RequestDuplicateApplicationJobCreateJob
	}

	if obj.RequestDuplicateFieldJobCreateJob != nil {
		return obj.RequestDuplicateFieldJobCreateJob
	}

	if obj.RequestDuplicateTableJobCreateJob != nil {
		return obj.RequestDuplicateTableJobCreateJob
	}

	if obj.RequestFileImportJobCreateJob != nil {
		return obj.RequestFileImportJobCreateJob
	}

	if obj.RequestInstallTemplateJobCreateJob != nil {
		return obj.RequestInstallTemplateJobCreateJob
	}

	if obj.RequestRestoreSnapshotJobCreateJob != nil {
		return obj.RequestRestoreSnapshotJobCreateJob
	}

	// all schemas are nil
	return nil
}

type NullableJobTypeCreateJob struct {
	value *JobTypeCreateJob
	isSet bool
}

func (v NullableJobTypeCreateJob) Get() *JobTypeCreateJob {
	return v.value
}

func (v *NullableJobTypeCreateJob) Set(val *JobTypeCreateJob) {
	v.value = val
	v.isSet = true
}

func (v NullableJobTypeCreateJob) IsSet() bool {
	return v.isSet
}

func (v *NullableJobTypeCreateJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobTypeCreateJob(val *JobTypeCreateJob) *NullableJobTypeCreateJob {
	return &NullableJobTypeCreateJob{value: val, isSet: true}
}

func (v NullableJobTypeCreateJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobTypeCreateJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


