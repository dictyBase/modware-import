/*
Baserow API spec

For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).  For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).

API version: 1.18.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the URLFieldCreateField type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &URLFieldCreateField{}

// URLFieldCreateField struct for URLFieldCreateField
type URLFieldCreateField struct {
	Name string `json:"name"`
	Type Type712Enum `json:"type"`
}

// NewURLFieldCreateField instantiates a new URLFieldCreateField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewURLFieldCreateField(name string, type_ Type712Enum) *URLFieldCreateField {
	this := URLFieldCreateField{}
	this.Name = name
	this.Type = type_
	return &this
}

// NewURLFieldCreateFieldWithDefaults instantiates a new URLFieldCreateField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewURLFieldCreateFieldWithDefaults() *URLFieldCreateField {
	this := URLFieldCreateField{}
	return &this
}

// GetName returns the Name field value
func (o *URLFieldCreateField) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *URLFieldCreateField) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *URLFieldCreateField) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *URLFieldCreateField) GetType() Type712Enum {
	if o == nil {
		var ret Type712Enum
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *URLFieldCreateField) GetTypeOk() (*Type712Enum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *URLFieldCreateField) SetType(v Type712Enum) {
	o.Type = v
}

func (o URLFieldCreateField) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o URLFieldCreateField) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableURLFieldCreateField struct {
	value *URLFieldCreateField
	isSet bool
}

func (v NullableURLFieldCreateField) Get() *URLFieldCreateField {
	return v.value
}

func (v *NullableURLFieldCreateField) Set(val *URLFieldCreateField) {
	v.value = val
	v.isSet = true
}

func (v NullableURLFieldCreateField) IsSet() bool {
	return v.isSet
}

func (v *NullableURLFieldCreateField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableURLFieldCreateField(val *URLFieldCreateField) *NullableURLFieldCreateField {
	return &NullableURLFieldCreateField{value: val, isSet: true}
}

func (v NullableURLFieldCreateField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableURLFieldCreateField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


